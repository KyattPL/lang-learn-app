{"version":3,"sources":["components/Header.jsx","components/norwegian/utilsNorwegian.js","components/norwegian/AdjGrammarNorwegian.jsx","components/norwegian/NounGrammarNorwegian.jsx","components/norwegian/VerbGrammarNorwegian.jsx","components/norwegian/small/SmAdjGrammarNorwegian.jsx","components/norwegian/small/SmNounGrammarNorwegian.jsx","components/norwegian/small/SmVerbGrammarNorwegian.jsx","components/norwegian/NorwegianCard.jsx","components/dutch/DutchCard.jsx","components/Flashcard.jsx","components/TranslationGroup.jsx","components/SearchCard.jsx","utils/fetchGetCard.js","components/AddCard.jsx","Routes.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","sticky","bg","variant","expand","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","Form","inline","FormControl","type","placeholder","Button","checkAdjProperties","grammarObj","origKeys","Object","keys","sort","testKeys","JSON","stringify","checkNounProperties","checkVerbProperties","AdjGrammarNorwegian","TypeError","Table","bordered","hover","size","colSpan","masculineSinIndef","masculineSinDef","masculinePlIndef","masculinePlDef","feminineSinIndef","feminineSinDef","femininePlIndef","femininePlDef","neuterSinIndef","neuterSinDef","neuterPlIndef","neuterPlDef","comparative","indefSuperlative","defSuperlative","NounGrammarNorwegian","singularIndefinite","singularDefinite","pluralIndefinite","pluralDefinite","VerbGrammarNorwegian","present","past","future","conditional","presentPerfect","pastPerfect","futurePerfect","conditionalPerfect","SmAdjGrammarNorwegian","SmNounGrammarNorwegian","SmVerbGrammarNorwegian","NorwegianCard","cardObj","numOfTranslation","singleTranslation","translation","result","trObj","checkProperties","useState","window","innerWidth","windowWidth","setWindowWidth","useEffect","addEventListener","grammarAdj","grammarNoun","grammarVerb","gender","Card","Body","Title","word","Subtitle","pronounciation","Text","meaning","DutchCard","Flashcard","cardLang","TranslationGroup","numOfTranslations","length","Array","fill","map","_","i","SearchCard","validated","setValidated","hasBeenFound","setFound","cardInfo","setCardInfo","setCardLang","noWord","setNoWord","show","setShow","wordInput","useRef","selectInput","handleClose","Container","fluid","Row","Col","xs","noValidate","onSubmit","event","lang","preventDefault","stopPropagation","currentTarget","checkValidity","current","value","fetch","method","headers","body","then","response","text","data","missingWord","console","log","parse","catch","error","Label","htmlFor","srOnly","InputGroup","Prepend","Control","ref","defaultValue","required","Feedback","style","order","Modal","onHide","closeButton","Footer","onClick","AddCard","App","exact","path","noGutters","CardDeck","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bff4124.chunk.js","sourcesContent":["import Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\n\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Navbar.Brand as={Link} to=\"/\">LangLearn</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link as={Link} to=\"/addCard\">Add Card</Nav.Link>\n                    <Nav.Link as={Link} to=\"/searchCard\">Lookup word</Nav.Link>\n                </Nav>\n                <Form inline>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    <Button variant=\"outline-success\">Search</Button>\n                </Form>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default Header;","export function checkAdjProperties(grammarObj) {\n    const testObj = {\n        \"masculineSinIndef\": \"ikke\",\n        \"masculineSinDef\": \"ikka\",\n        \"masculinePlIndef\": \"ikke\",\n        \"masculinePlDef\": \"ikka\",\n        \"feminineSinIndef\": \"ikke\",\n        \"feminineSinDef\": \"ikka\",\n        \"femininePlIndef\": \"ikke\",\n        \"femininePlDef\": \"ikka\",\n        \"neuterSinIndef\": \"eikke\",\n        \"neuterSinDef\": \"eikka\",\n        \"neuterPlIndef\": \"ikket\",\n        \"neuterPlDef\": \"ikkete\",\n        \"comparative\": \"ikketa\",\n        \"indefSuperlative\": \"ikketan\",\n        \"defSuperlative\": \"ikketane\",\n        \"_id\": \"420\"\n    }\n    let origKeys = Object.keys(grammarObj).sort();\n    let testKeys = Object.keys(testObj).sort();\n    return JSON.stringify(origKeys) === JSON.stringify(testKeys);\n}\n\nexport function checkNounProperties(grammarObj) {\n    const testObj = {\n        \"countable\": \"true\",\n        \"gender\": \"masculine\",\n        \"singularIndefinite\": \"en hund\",\n        \"singularDefinite\": \"hunden\",\n        \"pluralIndefinite\": \"hunder\",\n        \"pluralDefinite\": \"hundene\",\n        \"_id\": \"420\"\n    }\n    let origKeys = Object.keys(grammarObj).sort();\n    let testKeys = Object.keys(testObj).sort();\n    return JSON.stringify(origKeys) === JSON.stringify(testKeys);\n}\n\nexport function checkVerbProperties(grammarObj) {\n    const testObj = {\n        \"infinitive\": \"faef\",\n        \"present\": \"aefaf\",\n        \"past\": \"efffe\",\n        \"future\": \"eea\",\n        \"conditional\": \"fafa\",\n        \"imperative\": \"fafaef\",\n        \"presentPerfect\": \"va faaan\",\n        \"pastPerfect\": \"fafeee\",\n        \"futurePerfect\": \"fafaa\",\n        \"conditionalPerfect\": \"fff\",\n        \"_id\": \"420\"\n    }\n    let origKeys = Object.keys(grammarObj).sort();\n    let testKeys = Object.keys(testObj).sort();\n    return JSON.stringify(origKeys) === JSON.stringify(testKeys);\n}","import Table from 'react-bootstrap/Table';\nimport { checkAdjProperties } from './utilsNorwegian.js';\nimport \"../../styles/CardTable.css\";\n\nfunction AdjGrammarNorwegian({ grammarObj }) {\n\n    if (!checkAdjProperties(grammarObj)) {\n        throw new TypeError(\"Wrong grammar obj structure in AdjGrammarNorwegian\");\n    }\n\n    return (\n        <>\n            <Table bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th className=\"cardTableHeader\" colSpan=\"2\">Singular</th>\n                        <th className=\"cardTableHeader\" colSpan=\"2\">Plural</th>\n                    </tr>\n                    <tr>\n                        <th></th>\n                        <th className=\"cardTableHeader\">Indefinite</th>\n                        <th className=\"cardTableHeader\">Definite</th>\n                        <th className=\"cardTableHeader\">Indefinite</th>\n                        <th className=\"cardTableHeader\">Definite</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td><strong>masc.</strong></td>\n                        <td>{grammarObj.masculineSinIndef}</td>\n                        <td>{grammarObj.masculineSinDef}</td>\n                        <td>{grammarObj.masculinePlIndef}</td>\n                        <td>{grammarObj.masculinePlDef}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>fem.</strong></td>\n                        <td>{grammarObj.feminineSinIndef}</td>\n                        <td>{grammarObj.feminineSinDef}</td>\n                        <td>{grammarObj.femininePlIndef}</td>\n                        <td>{grammarObj.femininePlDef}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>neut.</strong></td>\n                        <td>{grammarObj.neuterSinIndef}</td>\n                        <td>{grammarObj.neuterSinDef}</td>\n                        <td>{grammarObj.neuterPlIndef}</td>\n                        <td>{grammarObj.neuterPlDef}</td>\n                    </tr>\n                </tbody>\n            </Table>\n            <Table bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th className=\"cardTableHeader\">Comparative</th>\n                        <th className=\"cardTableHeader\">Indefinite superlative</th>\n                        <th className=\"cardTableHeader\">Definite superlative</th>\n                    </tr>\n                    <tr>\n                        <td>{grammarObj.comparative}</td>\n                        <td>{grammarObj.indefSuperlative}</td>\n                        <td>{grammarObj.defSuperlative}</td>\n                    </tr>\n                </thead>\n            </Table>\n        </>\n    )\n}\n\nexport default AdjGrammarNorwegian;","import Table from 'react-bootstrap/Table';\nimport { checkNounProperties } from './utilsNorwegian.js';\nimport \"../../styles/CardTable.css\";\n\nfunction NounGrammarNorwegian({ grammarObj }) {\n\n    if (!checkNounProperties(grammarObj)) {\n        throw new TypeError(\"Wrong grammar obj structure in NounGrammarNorwegian\");\n    }\n\n    return (\n        <Table bordered hover size=\"sm\">\n            <thead>\n                <tr>\n                    <th></th>\n                    <th className=\"cardTableHeader\">Singular</th>\n                    <th className=\"cardTableHeader\">Plural</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td><strong>Indefinite</strong></td>\n                    <td>{grammarObj.singularIndefinite}</td>\n                    <td>{grammarObj.singularDefinite}</td>\n                </tr>\n                <tr>\n                    <td><strong>Definite</strong></td>\n                    <td>{grammarObj.pluralIndefinite}</td>\n                    <td>{grammarObj.pluralDefinite}</td>\n                </tr>\n            </tbody>\n        </Table>\n    )\n}\n\nexport default NounGrammarNorwegian;","import Table from 'react-bootstrap/Table';\nimport { checkVerbProperties } from './utilsNorwegian.js';\n\nfunction VerbGrammarNorwegian({ grammarObj }) {\n\n    if (!checkVerbProperties(grammarObj)) {\n        throw new TypeError(\"Wrong grammar obj structure in VerbGrammarNorwegian\");\n    }\n\n    return (\n        <Table bordered hover size=\"sm\">\n            <thead>\n                <tr>\n                    <th></th>\n                    <th className=\"cardTableHeader\">Present</th>\n                    <th className=\"cardTableHeader\">Past</th>\n                    <th className=\"cardTableHeader\">Future</th>\n                    <th className=\"cardTableHeader\">Conditional</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <th>Simple</th>\n                    <td>{grammarObj.present}</td>\n                    <td>{grammarObj.past}</td>\n                    <td>{grammarObj.future}</td>\n                    <td>{grammarObj.conditional}</td>\n                </tr>\n                <tr>\n                    <td><strong>Perfect</strong></td>\n                    <td>{grammarObj.presentPerfect}</td>\n                    <td>{grammarObj.pastPerfect}</td>\n                    <td>{grammarObj.futurePerfect}</td>\n                    <td>{grammarObj.conditionalPerfect}</td>\n                </tr>\n            </tbody>\n        </Table>\n    )\n}\n\nexport default VerbGrammarNorwegian;","import Table from 'react-bootstrap/Table';\nimport { checkAdjProperties } from '../utilsNorwegian.js';\nimport \"../../../styles/CardTable.css\";\n\nfunction SmAdjGrammarNorwegian({grammarObj}) {\n\n    if(!checkAdjProperties(grammarObj)) {\n        throw new TypeError(\"Wrong grammar obj structure in SmAdjGrammarNorwegian\");\n    }\n\n    return (\n        <>\n            <Table bordered hover size=\"sm\">\n                <tbody data-testid=\"testCard\">\n                    <tr>\n                        <th className=\"cardTableHeader\" colSpan=\"2\">Masculine</th>\n                    </tr>\n                    <tr>\n                        <th>Singular Indefinite</th>\n                        <td>{grammarObj.masculineSinIndef}</td>\n                    </tr>\n                    <tr>\n                        <th>Singular Definite</th>\n                        <td>{grammarObj.masculineSinDef}</td>\n                    </tr>\n                    <tr>\n                        <th>Plural Indefinite</th>\n                        <td>{grammarObj.masculinePlIndef}</td>\n                    </tr>\n                    <tr>\n                        <th>Plural Definite</th>\n                        <td>{grammarObj.masculinePlDef}</td>\n                    </tr>\n                    <tr>\n                        <th className=\"cardTableHeader\" colSpan=\"2\">Feminine</th>\n                    </tr>\n                    <tr>\n                        <th>Singular Indefinite</th>\n                        <td>{grammarObj.feminineSinIndef}</td>\n                    </tr>\n                    <tr>\n                        <th>Singular Definite</th>\n                        <td>{grammarObj.feminineSinDef}</td>\n                    </tr>\n                    <tr>\n                        <th>Plural Indefinite</th>\n                        <td>{grammarObj.femininePlIndef}</td>\n                    </tr>\n                    <tr>\n                        <th>Plural Definite</th>\n                        <td>{grammarObj.femininePlDef}</td>\n                    </tr>\n                    <tr>\n                        <th className=\"cardTableHeader\" colSpan=\"2\">Neuter</th>\n                    </tr>\n                    <tr>\n                        <th>Singular Indefinite</th>\n                        <td>{grammarObj.neuterSinIndef}</td>\n                    </tr>\n                    <tr>\n                        <th>Singular Definite</th>\n                        <td>{grammarObj.neuterSinDef}</td>\n                    </tr>\n                    <tr>\n                        <th>Plural Indefinite</th>\n                        <td>{grammarObj.neuterPlIndef}</td>\n                    </tr>\n                    <tr>\n                        <th>Plural Definite</th>\n                        <td>{grammarObj.neuterPlDef}</td>\n                    </tr>\n                </tbody>\n            </Table>\n            <Table bordered hover size=\"sm\">\n                <tbody>\n                    <tr>\n                        <th>Comparative</th>\n                        <td>{grammarObj.comparative}</td>\n                    </tr>\n                    <tr>\n                        <th>Indefinite superlative</th>\n                        <td>{grammarObj.indefSuperlative}</td>\n                    </tr>\n                    <tr>\n                        <th>Definite superlative</th>\n                        <td>{grammarObj.defSuperlative}</td>\n                    </tr>\n                </tbody>\n            </Table>\n        </>\n    )\n}\n\nexport default SmAdjGrammarNorwegian;","import Table from 'react-bootstrap/Table';\nimport { checkNounProperties } from '../utilsNorwegian.js';\n\nfunction SmNounGrammarNorwegian({grammarObj}) {\n\n    if(!checkNounProperties(grammarObj)) {\n        throw new TypeError(\"Wrong grammar obj structure in SmNounGrammarNorwegian\");\n    }\n\n    return (\n        <Table bordered hover size=\"sm\">\n            <tbody data-testid=\"testCard\">\n                <tr>\n                    <th>Singular Indefinite</th>\n                    <td>{grammarObj.singularIndefinite}</td>\n                </tr>\n                <tr>\n                    <th>Singular Definite</th>\n                    <td>{grammarObj.singularDefinite}</td>\n                </tr>\n                <tr>\n                    <th>Plural Indefinite</th>\n                    <td>{grammarObj.pluralIndefinite}</td>\n                </tr>\n                <tr>\n                    <th>Plural Definite</th>\n                    <td>{grammarObj.pluralDefinite}</td>\n                </tr>\n            </tbody>\n        </Table>\n    )\n}\n\nexport default SmNounGrammarNorwegian;","import Table from 'react-bootstrap/Table';\nimport { checkVerbProperties } from '../utilsNorwegian.js';\nimport \"../../../styles/CardTable.css\";\n\nfunction SmVerbGrammarNorwegian({grammarObj}) {\n\n    if(!checkVerbProperties(grammarObj)) {\n        throw new TypeError(\"Wrong grammar obj structure in SmVerbGrammarNorwegian\");\n    }\n\n    return (\n        <Table bordered hover size=\"sm\">\n            <tbody data-testid=\"testCard\">\n                <tr>\n                    <th className=\"cardTableHeader\" colSpan=\"2\">Simple</th>\n                </tr>\n                <tr>\n                    <th>Present</th>\n                    <td>{grammarObj.present}</td>\n                </tr>\n                <tr>\n                    <th>Past</th>\n                    <td>{grammarObj.past}</td>\n                </tr>\n                <tr>\n                    <th>Future</th>\n                    <td>{grammarObj.future}</td>\n                </tr>\n                <tr>\n                    <th>Conditional</th>\n                    <td>{grammarObj.conditional}</td>\n                </tr>\n                <tr>\n                    <th className=\"cardTableHeader\" colSpan=\"2\">Perfect</th>\n                </tr>\n                <tr>\n                    <th>Present</th>\n                    <td>{grammarObj.presentPerfect}</td>\n                </tr>\n                <tr>\n                    <th>Past</th>\n                    <td>{grammarObj.pastPerfect}</td>\n                </tr>\n                <tr>\n                    <th>Future</th>\n                    <td>{grammarObj.futurePerfect}</td>\n                </tr>\n                <tr>\n                    <th>Conditional</th>\n                    <td>{grammarObj.conditionalPerfect}</td>\n                </tr>\n            </tbody>\n        </Table>\n    )\n}\n\nexport default SmVerbGrammarNorwegian;","import { useState, useEffect } from 'react';\n\nimport Card from 'react-bootstrap/Card';\nimport AdjGrammarNorwegian from './AdjGrammarNorwegian';\nimport NounGrammarNorwegian from './NounGrammarNorwegian';\nimport VerbGrammarNorwegian from './VerbGrammarNorwegian';\n\nimport SmAdjGrammarNorwegian from './small/SmAdjGrammarNorwegian.jsx';\nimport SmNounGrammarNorwegian from './small/SmNounGrammarNorwegian';\nimport SmVerbGrammarNorwegian from './small/SmVerbGrammarNorwegian';\n\nimport '../../styles/Card.css';\n\nfunction checkProperties(cardObj, numOfTranslation) {\n    let result = false;\n    if ('word' in cardObj && 'pronounciation' in cardObj && 'translation' in cardObj) {\n        let trObj = cardObj.translation[numOfTranslation];\n        if ('grammarAdj' in trObj || 'grammarNoun' in trObj || 'grammarVerb' in trObj) {\n            result = true;\n        }\n    }\n    return result;\n}\n\nfunction NorwegianCard({ cardObj, numOfTranslation }) {\n    let singleTranslation = cardObj.translation[numOfTranslation];\n\n    if (!checkProperties(cardObj, numOfTranslation)) {\n        throw new TypeError(\"Wrong card obj structure in NorwegianCard\");\n    }\n\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowWidth(window.innerWidth);\n        }\n\n        window.addEventListener('resize', handleResize);\n    });\n\n    let result = null;\n\n    if (windowWidth >= 576) {\n        if (\"grammarAdj\" in singleTranslation) {\n            result = <AdjGrammarNorwegian grammarObj={singleTranslation.grammarAdj} />\n        } else if (\"grammarNoun\" in singleTranslation) {\n            result = <NounGrammarNorwegian grammarObj={singleTranslation.grammarNoun} />\n        } else {\n            result = <VerbGrammarNorwegian grammarObj={singleTranslation.grammarVerb} />\n        }\n    } else {\n        // TODO: make Grammars arranged in an order that will handle smaller devices\n        if (\"grammarAdj\" in singleTranslation) {\n            result = <SmAdjGrammarNorwegian grammarObj={singleTranslation.grammarAdj}/>; //<AdjGrammarNorwegian grammarObj={singleTranslation.grammarAdj} />\n        } else if (\"grammarNoun\" in singleTranslation) {\n            result = <SmNounGrammarNorwegian grammarObj={singleTranslation.grammarNoun}/>; //<NounGrammarNorwegian grammarObj={singleTranslation.grammarNoun} />\n        } else {\n            result = <SmVerbGrammarNorwegian grammarObj={singleTranslation.grammarVerb}/>; //<VerbGrammarNorwegian grammarObj={singleTranslation.grammarVerb} />\n        }\n    }\n\n    let gender = \"grammarNoun\" in singleTranslation ? singleTranslation.grammarNoun.gender : null;\n\n    return (\n        <Card>\n            <Card.Body>\n                <Card.Title>{cardObj.word}</Card.Title>\n                <Card.Subtitle className=\"mb-2\">{cardObj.pronounciation}</Card.Subtitle>\n                <Card.Subtitle className=\"mb-2 text-muted\">{singleTranslation.type} {gender}</Card.Subtitle>\n                <Card.Text>\n                    {singleTranslation.meaning}\n                </Card.Text>\n                {result}\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default NorwegianCard;","function DutchCard({ cardObj, numOfTranslation }) {\n    return (\n        <div>\n\n        </div>\n    )\n}\n\nexport default DutchCard;","import NorwegianCard from \"./norwegian/NorwegianCard\";\nimport DutchCard from \"./dutch/DutchCard\";\n\nfunction Flashcard({ cardLang, cardObj, numOfTranslation }) {\n\n    let result = null;\n\n    switch (cardLang) {\n        case \"Dutch\": result = <DutchCard cardObj={cardObj} />; break;\n        case \"Norwegian\": result = <NorwegianCard cardObj={cardObj} numOfTranslation={numOfTranslation} />; break;\n        default: result = null;\n    }\n\n    return (\n        result\n    );\n}\n\nexport default Flashcard;","import Flashcard from \"./Flashcard.jsx\";\n\nfunction TranslationGroup({ cardLang, cardObj }) {\n    let numOfTranslations = cardObj.translation.length;\n    return (\n        <div>\n            {Array(numOfTranslations).fill().map((_, i) => <Flashcard key={i} cardLang={cardLang} cardObj={cardObj} numOfTranslation={i} />)}\n        </div>\n    )\n}\n\nexport default TranslationGroup;","import InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Modal from 'react-bootstrap/Modal';\n\nimport { useState, useRef } from 'react';\n\nimport '../styles/SearchCard.css';\nimport TranslationGroup from './TranslationGroup.jsx';\nimport { fetchGetCard } from '../utils/fetchGetCard.js';\n\nfunction SearchCard() {\n\n    const [validated, setValidated] = useState(false);\n\n    const [hasBeenFound, setFound] = useState(false);\n    const [cardInfo, setCardInfo] = useState(null);\n    const [cardLang, setCardLang] = useState(null);\n\n    const [noWord, setNoWord] = useState(null);\n    const [show, setShow] = useState(false);\n\n    const wordInput = useRef(null);\n    const selectInput = useRef(null);\n\n    const handleClose = () => setShow(false);\n\n    const showModal = (missingWord) => {\n        setNoWord(missingWord);\n        setShow(true);\n        return;\n    }\n\n    const searchCard = (event) => {\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.currentTarget.checkValidity() === true) {\n            setValidated(false);\n            fetchGetCard(selectInput.current.value, wordInput.current.value)\n                .then(data => {\n                    if (data === \"DB_ERR\") {\n                        console.log(\"Oops, something went wrong!\");\n                    } else if (data === \"MISSING_WORD_PASSED\") {\n                        console.log(\"Somehow your word wasn't passed to the backend\");\n                    } else {\n                        if (data === '') {\n                            showModal(wordInput.current.value);\n                        } else {\n                            setCardInfo(JSON.parse(data));\n                            setCardLang(selectInput.current.value);\n                            setFound(true);\n                        }\n                    }\n                }).catch((error) => {\n                    console.error('Error:', error);\n                })\n        } else {\n            setValidated(true);\n        }\n    }\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col>\n                </Col>\n                <Col xs={10}>\n                    <Form className=\"mt-2\" noValidate validated={validated} onSubmit={searchCard}>\n                        <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\n                            Word\n                        </Form.Label>\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                                <InputGroup.Text>Language:</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <Form.Control className=\"langDropdown\" ref={selectInput} as=\"select\" defaultValue=\"Norwegian\">\n                                <option>Dutch</option>\n                                <option>Norwegian</option>\n                            </Form.Control>\n                            <InputGroup.Prepend>\n                                <InputGroup.Text>Search:</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <FormControl required ref={wordInput} placeholder=\"Word\" data-testid=\"testWordInput\" />\n                            <FormControl.Feedback style={{ order: 4 }} type=\"invalid\">Empty box!</FormControl.Feedback>\n                            <Button data-testid=\"testButtonSearch\" type=\"submit\" variant=\"success\">\n                                Submit\n                            </Button>\n                        </InputGroup>\n                    </Form>\n                </Col>\n                <Col>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                </Col>\n                <Col xs={10} className=\"mt-2\">\n                    {hasBeenFound ? <TranslationGroup cardLang={cardLang} cardObj={cardInfo} /> : null}\n                </Col>\n                <Col>\n                </Col>\n            </Row>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Not in dictionary</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>We couldn't find the word {noWord} in the dictionary</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleClose} data-testid=\"testCloseModal\">\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Container>\n    )\n}\n\nexport default SearchCard;","export const fetchGetCard = (lang, word) => {\n    return fetch(\"/getCard\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ lang: lang, word: word })\n    }).then(response => response.text())\n}","import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction AddCard() {\n    return (\n        <Container fluid>\n            <Row>\n                <Col>\n                </Col>\n                <Col xs={10}>\n                    <div>Test stuff</div>\n                </Col>\n                <Col>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default AddCard;","import './Routes.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CardDeck from 'react-bootstrap/CardDeck';\n\nimport Header from './components/Header.jsx';\nimport SearchCard from './components/SearchCard.jsx';\nimport AddCard from './components/AddCard.jsx';\n\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Container fluid className=\"no-padding-container h-100\">\n            <Row noGutters={true} className=\"content\">\n              <Col>\n              </Col>\n              <Col xs=\"10\">\n                <CardDeck className=\"deck\">\n                  <h1>Hi there!</h1>\n                </CardDeck>\n              </Col>\n              <Col>\n              </Col>\n            </Row>\n          </Container>\n        </Route>\n        <Route path=\"/addCard\">\n          <AddCard />\n        </Route>\n        <Route path=\"/searchCard\">\n          <SearchCard />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Routes from './Routes.jsx';\n\nfunction App() {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Routes />\n        </Router>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}