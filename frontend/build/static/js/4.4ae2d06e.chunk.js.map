{"version":3,"sources":["../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","components/DeleteCardModal.jsx","utils/fetchCheckDeletePassword.js","utils/fetchDeleteCard.js","../node_modules/react-bootstrap/esm/Table.js","components/norwegian/utilsNorwegian.js","components/norwegian/displayCard/AdjGrammarNorwegian.jsx","components/norwegian/displayCard/NounGrammarNorwegian.jsx","components/norwegian/displayCard/VerbGrammarNorwegian.jsx","components/norwegian/smallDisplayCard/SmAdjGrammarNorwegian.jsx","components/norwegian/smallDisplayCard/SmNounGrammarNorwegian.jsx","components/norwegian/smallDisplayCard/SmVerbGrammarNorwegian.jsx","components/norwegian/NorwegianCard.jsx","components/dutch/DutchCard.jsx","components/Flashcard.jsx","components/TranslationGroup.jsx","components/SearchCardModal.jsx","components/SearchCard.jsx","utils/fetchGetCard.js"],"names":["_excluded","CardImg","React","forwardRef","_ref","ref","bsPrefix","className","variant","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","DeleteCardModal","cardLang","cardId","translationId","useState","isShown","setIsShown","validated","setValidated","passInput","useRef","handleClose","handleDelete","pass","password","current","passInpObj","document","getElementById","fetch","method","headers","JSON","stringify","then","response","res","setCustomValidity","lang","id","fetchDeleteCard","window","location","reload","catch","err","console","error","Button","onClick","Modal","show","onHide","closeButton","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","Group","Label","Control","type","placeholder","Feedback","Table","striped","bordered","borderless","hover","size","responsive","decoratedBsPrefix","classes","table","responsiveClass","checkAdjProperties","grammarObj","origKeys","Object","keys","sort","testKeys","checkNounProperties","checkVerbProperties","AdjGrammarNorwegian","TypeError","colSpan","masculineSinIndef","masculineSinDef","masculinePlIndef","masculinePlDef","feminineSinIndef","feminineSinDef","femininePlIndef","femininePlDef","neuterSinIndef","neuterSinDef","neuterPlIndef","neuterPlDef","comparative","indefSuperlative","defSuperlative","NounGrammarNorwegian","singularIndefinite","singularDefinite","pluralIndefinite","pluralDefinite","VerbGrammarNorwegian","present","past","future","conditional","presentPerfect","pastPerfect","futurePerfect","conditionalPerfect","SmAdjGrammarNorwegian","SmNounGrammarNorwegian","SmVerbGrammarNorwegian","NorwegianCard","cardObj","numOfTranslation","singleTranslation","translation","result","trObj","checkProperties","innerWidth","windowWidth","setWindowWidth","useEffect","addEventListener","grammarAdj","grammarNoun","grammarVerb","gender","_id","word","pronounciation","meaning","DutchCard","Flashcard","TranslationGroup","numOfTranslations","length","Array","fill","map","_","i","SearchCardModal","noWord","SearchCard","hasBeenFound","setFound","wordInput","selectInput","cardInfo","setCardInfo","setCardLang","setNoWord","shouldShowModal","setShouldShowModal","Container","fluid","Row","Col","xs","currentTarget","checkValidity","data","missingWord","log","parse","htmlFor","srOnly","InputGroup","Prepend","defaultValue","FormControl","required","style","order"],"mappings":"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","file":"static/js/4.4ae2d06e.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"variant\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nimport { useState, useRef } from 'react';\n\nimport { fetchCheckDeletePassword } from '../utils/fetchCheckDeletePassword.js';\nimport { fetchDeleteCard } from '../utils/fetchDeleteCard.js';\n\nfunction DeleteCardModal({ cardLang, cardId, translationId }) {\n\n    const [isShown, setIsShown] = useState(false);\n    const [validated, setValidated] = useState(false);\n    const passInput = useRef(null);\n\n    const handleClose = () => {\n        setIsShown(false);\n    }\n\n    const handleOpen = () => {\n        setIsShown(true);\n    }\n\n    const handleDelete = () => {\n\n        const password = passInput.current.value;\n        const passInpObj = document.getElementById(\"passInput\");\n\n        setValidated(false);\n\n        fetchCheckDeletePassword(password).then(res => {\n            if (res === \"Forbidden\") {\n                passInpObj.setCustomValidity(\"Wrong password\");\n            } else {\n                passInpObj.setCustomValidity(\"\");\n                fetchDeleteCard(password, cardLang, cardId, translationId).then(res => {\n                    window.location.reload();\n                }).catch(err => {\n                    console.error(\"Error: \", err);\n                });\n            }\n        }).then(() => {\n            setValidated(true);\n        }).catch(error => {\n            console.error(\"Error: \", error);\n        });\n    }\n\n    const formSubmit = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        handleDelete();\n    }\n\n    return (\n        <>\n            <Button variant=\"danger\" onClick={handleOpen}>\n                Delete\n            </Button>\n            <Modal show={isShown} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        Authorization required\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form noValidate validated={validated} id=\"passwordForm\" onSubmit={formSubmit}>\n                        <Form.Group>\n                            <Form.Label>Please type in a password:</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" ref={passInput} id=\"passInput\" />\n                            <Form.Control.Feedback type=\"invalid\">Wrong password</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={handleDelete}>\n                        Delete\n                    </Button>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default DeleteCardModal;","export const fetchCheckDeletePassword = (pass) => {\n    return fetch(\"/checkDeletePassword\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ password: pass })\n    }).then(response => response.text());\n};","export const fetchDeleteCard = (password, lang, id, translationId) => {\n    return fetch(\"/deleteCard\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ password: password, lang: lang, id: id, translationId: translationId })\n    }).then(response => response.text());\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","export function checkAdjProperties(grammarObj) {\n    const testObj = {\n        \"masculineSinIndef\": \"ikke\",\n        \"masculineSinDef\": \"ikka\",\n        \"masculinePlIndef\": \"ikke\",\n        \"masculinePlDef\": \"ikka\",\n        \"feminineSinIndef\": \"ikke\",\n        \"feminineSinDef\": \"ikka\",\n        \"femininePlIndef\": \"ikke\",\n        \"femininePlDef\": \"ikka\",\n        \"neuterSinIndef\": \"eikke\",\n        \"neuterSinDef\": \"eikka\",\n        \"neuterPlIndef\": \"ikket\",\n        \"neuterPlDef\": \"ikkete\",\n        \"comparative\": \"ikketa\",\n        \"indefSuperlative\": \"ikketan\",\n        \"defSuperlative\": \"ikketane\",\n        \"_id\": \"420\"\n    }\n    let origKeys = Object.keys(grammarObj).sort();\n    let testKeys = Object.keys(testObj).sort();\n    return JSON.stringify(origKeys) === JSON.stringify(testKeys);\n}\n\nexport function checkNounProperties(grammarObj) {\n    const testObj = {\n        \"countable\": \"true\",\n        \"gender\": \"masculine\",\n        \"singularIndefinite\": \"en hund\",\n        \"singularDefinite\": \"hunden\",\n        \"pluralIndefinite\": \"hunder\",\n        \"pluralDefinite\": \"hundene\",\n        \"_id\": \"420\"\n    }\n    let origKeys = Object.keys(grammarObj).sort();\n    let testKeys = Object.keys(testObj).sort();\n    return JSON.stringify(origKeys) === JSON.stringify(testKeys);\n}\n\nexport function checkVerbProperties(grammarObj) {\n    const testObj = {\n        \"infinitive\": \"faef\",\n        \"present\": \"aefaf\",\n        \"past\": \"efffe\",\n        \"future\": \"eea\",\n        \"conditional\": \"fafa\",\n        \"imperative\": \"fafaef\",\n        \"presentPerfect\": \"va faaan\",\n        \"pastPerfect\": \"fafeee\",\n        \"futurePerfect\": \"fafaa\",\n        \"conditionalPerfect\": \"fff\",\n        \"_id\": \"420\"\n    }\n    let origKeys = Object.keys(grammarObj).sort();\n    let testKeys = Object.keys(testObj).sort();\n    return JSON.stringify(origKeys) === JSON.stringify(testKeys);\n}","import Table from 'react-bootstrap/Table';\nimport { checkAdjProperties } from '../utilsNorwegian.js';\nimport \"../../../styles/CardTable.css\";\n\nfunction AdjGrammarNorwegian({ grammarObj }) {\n\n    if (!checkAdjProperties(grammarObj)) {\n        throw new TypeError(\"Wrong grammar obj structure in AdjGrammarNorwegian\");\n    }\n\n    return (\n        <>\n            <Table bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th className=\"cardTableHeader\" colSpan=\"2\">Singular</th>\n                        <th className=\"cardTableHeader\" colSpan=\"2\">Plural</th>\n                    </tr>\n                    <tr>\n                        <th></th>\n                        <th className=\"cardTableHeader\">Indefinite</th>\n                        <th className=\"cardTableHeader\">Definite</th>\n                        <th className=\"cardTableHeader\">Indefinite</th>\n                        <th className=\"cardTableHeader\">Definite</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td><strong>masc.</strong></td>\n                        <td>{grammarObj.masculineSinIndef}</td>\n                        <td>{grammarObj.masculineSinDef}</td>\n                        <td>{grammarObj.masculinePlIndef}</td>\n                        <td>{grammarObj.masculinePlDef}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>fem.</strong></td>\n                        <td>{grammarObj.feminineSinIndef}</td>\n                        <td>{grammarObj.feminineSinDef}</td>\n                        <td>{grammarObj.femininePlIndef}</td>\n                        <td>{grammarObj.femininePlDef}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>neut.</strong></td>\n                        <td>{grammarObj.neuterSinIndef}</td>\n                        <td>{grammarObj.neuterSinDef}</td>\n                        <td>{grammarObj.neuterPlIndef}</td>\n                        <td>{grammarObj.neuterPlDef}</td>\n                    </tr>\n                </tbody>\n            </Table>\n            <Table bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th className=\"cardTableHeader\">Comparative</th>\n                        <th className=\"cardTableHeader\">Indefinite superlative</th>\n                        <th className=\"cardTableHeader\">Definite superlative</th>\n                    </tr>\n                    <tr>\n                        <td>{grammarObj.comparative}</td>\n                        <td>{grammarObj.indefSuperlative}</td>\n                        <td>{grammarObj.defSuperlative}</td>\n                    </tr>\n                </thead>\n            </Table>\n        </>\n    )\n}\n\nexport default AdjGrammarNorwegian;","import Table from 'react-bootstrap/Table';\nimport { checkNounProperties } from '../utilsNorwegian.js';\nimport \"../../../styles/CardTable.css\";\n\nfunction NounGrammarNorwegian({ grammarObj }) {\n\n    if (!checkNounProperties(grammarObj)) {\n        throw new TypeError(\"Wrong grammar obj structure in NounGrammarNorwegian\");\n    }\n\n    return (\n        <Table bordered hover size=\"sm\">\n            <thead>\n                <tr>\n                    <th></th>\n                    <th className=\"cardTableHeader\">Singular</th>\n                    <th className=\"cardTableHeader\">Plural</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td><strong>Indefinite</strong></td>\n                    <td>{grammarObj.singularIndefinite}</td>\n                    <td>{grammarObj.singularDefinite}</td>\n                </tr>\n                <tr>\n                    <td><strong>Definite</strong></td>\n                    <td>{grammarObj.pluralIndefinite}</td>\n                    <td>{grammarObj.pluralDefinite}</td>\n                </tr>\n            </tbody>\n        </Table>\n    )\n}\n\nexport default NounGrammarNorwegian;","import Table from 'react-bootstrap/Table';\nimport { checkVerbProperties } from '../utilsNorwegian.js';\nimport \"../../../styles/CardTable.css\";\n\nfunction VerbGrammarNorwegian({ grammarObj }) {\n\n    if (!checkVerbProperties(grammarObj)) {\n        throw new TypeError(\"Wrong grammar obj structure in VerbGrammarNorwegian\");\n    }\n\n    return (\n        <Table bordered hover size=\"sm\">\n            <thead>\n                <tr>\n                    <th></th>\n                    <th className=\"cardTableHeader\">Present</th>\n                    <th className=\"cardTableHeader\">Past</th>\n                    <th className=\"cardTableHeader\">Future</th>\n                    <th className=\"cardTableHeader\">Conditional</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <th>Simple</th>\n                    <td>{grammarObj.present}</td>\n                    <td>{grammarObj.past}</td>\n                    <td>{grammarObj.future}</td>\n                    <td>{grammarObj.conditional}</td>\n                </tr>\n                <tr>\n                    <td><strong>Perfect</strong></td>\n                    <td>{grammarObj.presentPerfect}</td>\n                    <td>{grammarObj.pastPerfect}</td>\n                    <td>{grammarObj.futurePerfect}</td>\n                    <td>{grammarObj.conditionalPerfect}</td>\n                </tr>\n            </tbody>\n        </Table>\n    )\n}\n\nexport default VerbGrammarNorwegian;","import Table from 'react-bootstrap/Table';\nimport { checkAdjProperties } from '../utilsNorwegian.js';\nimport \"../../../styles/CardTable.css\";\n\nfunction SmAdjGrammarNorwegian({grammarObj}) {\n\n    if(!checkAdjProperties(grammarObj)) {\n        throw new TypeError(\"Wrong grammar obj structure in SmAdjGrammarNorwegian\");\n    }\n\n    return (\n        <>\n            <Table bordered hover size=\"sm\">\n                <tbody data-testid=\"testCard\">\n                    <tr>\n                        <th className=\"cardTableHeader\" colSpan=\"2\">Masculine</th>\n                    </tr>\n                    <tr>\n                        <th>Singular Indefinite</th>\n                        <td>{grammarObj.masculineSinIndef}</td>\n                    </tr>\n                    <tr>\n                        <th>Singular Definite</th>\n                        <td>{grammarObj.masculineSinDef}</td>\n                    </tr>\n                    <tr>\n                        <th>Plural Indefinite</th>\n                        <td>{grammarObj.masculinePlIndef}</td>\n                    </tr>\n                    <tr>\n                        <th>Plural Definite</th>\n                        <td>{grammarObj.masculinePlDef}</td>\n                    </tr>\n                    <tr>\n                        <th className=\"cardTableHeader\" colSpan=\"2\">Feminine</th>\n                    </tr>\n                    <tr>\n                        <th>Singular Indefinite</th>\n                        <td>{grammarObj.feminineSinIndef}</td>\n                    </tr>\n                    <tr>\n                        <th>Singular Definite</th>\n                        <td>{grammarObj.feminineSinDef}</td>\n                    </tr>\n                    <tr>\n                        <th>Plural Indefinite</th>\n                        <td>{grammarObj.femininePlIndef}</td>\n                    </tr>\n                    <tr>\n                        <th>Plural Definite</th>\n                        <td>{grammarObj.femininePlDef}</td>\n                    </tr>\n                    <tr>\n                        <th className=\"cardTableHeader\" colSpan=\"2\">Neuter</th>\n                    </tr>\n                    <tr>\n                        <th>Singular Indefinite</th>\n                        <td>{grammarObj.neuterSinIndef}</td>\n                    </tr>\n                    <tr>\n                        <th>Singular Definite</th>\n                        <td>{grammarObj.neuterSinDef}</td>\n                    </tr>\n                    <tr>\n                        <th>Plural Indefinite</th>\n                        <td>{grammarObj.neuterPlIndef}</td>\n                    </tr>\n                    <tr>\n                        <th>Plural Definite</th>\n                        <td>{grammarObj.neuterPlDef}</td>\n                    </tr>\n                </tbody>\n            </Table>\n            <Table bordered hover size=\"sm\">\n                <tbody>\n                    <tr>\n                        <th>Comparative</th>\n                        <td>{grammarObj.comparative}</td>\n                    </tr>\n                    <tr>\n                        <th>Indefinite superlative</th>\n                        <td>{grammarObj.indefSuperlative}</td>\n                    </tr>\n                    <tr>\n                        <th>Definite superlative</th>\n                        <td>{grammarObj.defSuperlative}</td>\n                    </tr>\n                </tbody>\n            </Table>\n        </>\n    )\n}\n\nexport default SmAdjGrammarNorwegian;","import Table from 'react-bootstrap/Table';\nimport { checkNounProperties } from '../utilsNorwegian.js';\n\nfunction SmNounGrammarNorwegian({grammarObj}) {\n\n    if(!checkNounProperties(grammarObj)) {\n        throw new TypeError(\"Wrong grammar obj structure in SmNounGrammarNorwegian\");\n    }\n\n    return (\n        <Table bordered hover size=\"sm\">\n            <tbody data-testid=\"testCard\">\n                <tr>\n                    <th>Singular Indefinite</th>\n                    <td>{grammarObj.singularIndefinite}</td>\n                </tr>\n                <tr>\n                    <th>Singular Definite</th>\n                    <td>{grammarObj.singularDefinite}</td>\n                </tr>\n                <tr>\n                    <th>Plural Indefinite</th>\n                    <td>{grammarObj.pluralIndefinite}</td>\n                </tr>\n                <tr>\n                    <th>Plural Definite</th>\n                    <td>{grammarObj.pluralDefinite}</td>\n                </tr>\n            </tbody>\n        </Table>\n    )\n}\n\nexport default SmNounGrammarNorwegian;","import Table from 'react-bootstrap/Table';\nimport { checkVerbProperties } from '../utilsNorwegian.js';\nimport \"../../../styles/CardTable.css\";\n\nfunction SmVerbGrammarNorwegian({grammarObj}) {\n\n    if(!checkVerbProperties(grammarObj)) {\n        throw new TypeError(\"Wrong grammar obj structure in SmVerbGrammarNorwegian\");\n    }\n\n    return (\n        <Table bordered hover size=\"sm\">\n            <tbody data-testid=\"testCard\">\n                <tr>\n                    <th className=\"cardTableHeader\" colSpan=\"2\">Simple</th>\n                </tr>\n                <tr>\n                    <th>Present</th>\n                    <td>{grammarObj.present}</td>\n                </tr>\n                <tr>\n                    <th>Past</th>\n                    <td>{grammarObj.past}</td>\n                </tr>\n                <tr>\n                    <th>Future</th>\n                    <td>{grammarObj.future}</td>\n                </tr>\n                <tr>\n                    <th>Conditional</th>\n                    <td>{grammarObj.conditional}</td>\n                </tr>\n                <tr>\n                    <th className=\"cardTableHeader\" colSpan=\"2\">Perfect</th>\n                </tr>\n                <tr>\n                    <th>Present</th>\n                    <td>{grammarObj.presentPerfect}</td>\n                </tr>\n                <tr>\n                    <th>Past</th>\n                    <td>{grammarObj.pastPerfect}</td>\n                </tr>\n                <tr>\n                    <th>Future</th>\n                    <td>{grammarObj.futurePerfect}</td>\n                </tr>\n                <tr>\n                    <th>Conditional</th>\n                    <td>{grammarObj.conditionalPerfect}</td>\n                </tr>\n            </tbody>\n        </Table>\n    )\n}\n\nexport default SmVerbGrammarNorwegian;","import { useState, useEffect } from 'react';\n\nimport Card from 'react-bootstrap/Card';\n\nimport DeleteCardModal from '../DeleteCardModal';\n\nimport AdjGrammarNorwegian from './displayCard/AdjGrammarNorwegian';\nimport NounGrammarNorwegian from './displayCard/NounGrammarNorwegian';\nimport VerbGrammarNorwegian from './displayCard/VerbGrammarNorwegian';\n\nimport SmAdjGrammarNorwegian from './smallDisplayCard/SmAdjGrammarNorwegian.jsx';\nimport SmNounGrammarNorwegian from './smallDisplayCard/SmNounGrammarNorwegian';\nimport SmVerbGrammarNorwegian from './smallDisplayCard/SmVerbGrammarNorwegian';\n\nimport '../../styles/Card.css';\n\nfunction checkProperties(cardObj, numOfTranslation) {\n    let result = false;\n    if ('word' in cardObj && 'translation' in cardObj) {\n        let trObj = cardObj.translation[numOfTranslation];\n        if ('grammarAdj' in trObj || 'grammarNoun' in trObj || 'grammarVerb' in trObj) {\n            if ('pronounciation' in trObj) {\n                result = true;\n            }\n        }\n    }\n    return result;\n}\n\nfunction NorwegianCard({ cardObj, numOfTranslation }) {\n    let singleTranslation = cardObj.translation[numOfTranslation];\n\n    if (!checkProperties(cardObj, numOfTranslation)) {\n        throw new TypeError(\"Wrong card obj structure in NorwegianCard\");\n    }\n\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowWidth(window.innerWidth);\n        }\n\n        window.addEventListener('resize', handleResize);\n    });\n\n    let result = null;\n\n    if (windowWidth >= 576) {\n        if (\"grammarAdj\" in singleTranslation) {\n            result = <AdjGrammarNorwegian grammarObj={singleTranslation.grammarAdj} />\n        } else if (\"grammarNoun\" in singleTranslation) {\n            result = <NounGrammarNorwegian grammarObj={singleTranslation.grammarNoun} />\n        } else {\n            result = <VerbGrammarNorwegian grammarObj={singleTranslation.grammarVerb} />\n        }\n    } else {\n        if (\"grammarAdj\" in singleTranslation) {\n            result = <SmAdjGrammarNorwegian grammarObj={singleTranslation.grammarAdj} />;\n        } else if (\"grammarNoun\" in singleTranslation) {\n            result = <SmNounGrammarNorwegian grammarObj={singleTranslation.grammarNoun} />;\n        } else {\n            result = <SmVerbGrammarNorwegian grammarObj={singleTranslation.grammarVerb} />;\n        }\n    }\n\n    let gender = \"grammarNoun\" in singleTranslation ? singleTranslation.grammarNoun.gender : null;\n\n    return (\n        <Card>\n            <Card.Header>\n                <DeleteCardModal cardLang=\"Norwegian\" cardId={cardObj._id} translationId={singleTranslation._id} />\n            </Card.Header>\n            <Card.Body>\n                <Card.Title>{cardObj.word}</Card.Title>\n                <Card.Subtitle className=\"mb-2\">{singleTranslation.pronounciation}</Card.Subtitle>\n                <Card.Subtitle className=\"mb-2 text-muted\">{singleTranslation.type} {gender}</Card.Subtitle>\n                <Card.Text>\n                    {singleTranslation.meaning}\n                </Card.Text>\n                {result}\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default NorwegianCard;","function DutchCard({ cardObj, numOfTranslation }) {\n    return (\n        <div>\n\n        </div>\n    )\n}\n\nexport default DutchCard;","import NorwegianCard from \"./norwegian/NorwegianCard.jsx\";\nimport DutchCard from \"./dutch/DutchCard.jsx\";\n\nfunction Flashcard({ cardLang, cardObj, numOfTranslation }) {\n\n    let result = null;\n\n    switch (cardLang) {\n        case \"Dutch\": result = <DutchCard cardObj={cardObj} numOfTranslation={numOfTranslation} />; break;\n        case \"Norwegian\": result = <NorwegianCard cardObj={cardObj} numOfTranslation={numOfTranslation} />; break;\n        default: result = null;\n    }\n\n    return (\n        result\n    );\n}\n\nexport default Flashcard;","import Flashcard from \"./Flashcard.jsx\";\n\nfunction TranslationGroup({ cardLang, cardObj }) {\n    let numOfTranslations = cardObj.translation.length;\n    return (\n        <div>\n            {Array(numOfTranslations).fill().map((_, i) => <Flashcard key={i} cardLang={cardLang} cardObj={cardObj} numOfTranslation={i} />)}\n        </div>\n    )\n}\n\nexport default TranslationGroup;","import Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nfunction SearchCardModal({show, noWord, handleClose}) {\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Not in dictionary</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>We couldn't find the word {noWord} in the dictionary</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"primary\" onClick={handleClose} data-testid=\"testCloseModal\">\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default SearchCardModal;","import InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { useState, useRef } from 'react';\n\nimport '../styles/SearchCard.css';\nimport TranslationGroup from './TranslationGroup.jsx';\nimport SearchCardModal from './SearchCardModal.jsx';\nimport { fetchGetCard } from '../utils/fetchGetCard.js';\n\nfunction SearchCard() {\n\n    const [validated, setValidated] = useState(false);\n    const [hasBeenFound, setFound] = useState(false);\n    const wordInput = useRef(null);\n    const selectInput = useRef(null);\n\n    const [cardInfo, setCardInfo] = useState(null);\n    const [cardLang, setCardLang] = useState(null);\n\n    const [noWord, setNoWord] = useState(null);\n    const [shouldShowModal, setShouldShowModal] = useState(false);\n\n    const handleClose = () => setShouldShowModal(false);\n\n    const showModal = (missingWord) => {\n        setNoWord(missingWord);\n        setShouldShowModal(true);\n        return;\n    }\n\n    const searchCard = (event) => {\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.currentTarget.checkValidity() === true) {\n            setValidated(false);\n            fetchGetCard(selectInput.current.value, wordInput.current.value)\n                .then(data => {\n                    if (data === \"DB_ERR\") {\n                        console.log(\"Oops, something went wrong!\");\n                    } else if (data === \"MISSING_WORD_PASSED\") {\n                        console.log(\"Somehow your word wasn't passed to the backend\");\n                    } else {\n                        if (data === '') {\n                            showModal(wordInput.current.value);\n                        } else {\n                            setCardInfo(JSON.parse(data));\n                            setCardLang(selectInput.current.value);\n                            setFound(true);\n                        }\n                    }\n                }).catch((error) => {\n                    console.error('Error:', error);\n                })\n        } else {\n            setValidated(true);\n        }\n    }\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col>\n                </Col>\n                <Col xs={10}>\n                    <Form className=\"mt-2\" noValidate validated={validated} onSubmit={searchCard}>\n                        <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\n                            Word\n                        </Form.Label>\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                                <InputGroup.Text>Language:</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <Form.Control className=\"langDropdown\" ref={selectInput} as=\"select\" defaultValue=\"Norwegian\">\n                                <option>Dutch</option>\n                                <option>Norwegian</option>\n                            </Form.Control>\n                            <InputGroup.Prepend>\n                                <InputGroup.Text>Search:</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <FormControl required ref={wordInput} placeholder=\"Word\" data-testid=\"testWordInput\" />\n                            <FormControl.Feedback style={{ order: 4 }} type=\"invalid\">Empty box!</FormControl.Feedback>\n                            <Button data-testid=\"testButtonSearch\" type=\"submit\" variant=\"success\">\n                                Submit\n                            </Button>\n                        </InputGroup>\n                    </Form>\n                </Col>\n                <Col>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                </Col>\n                <Col xs={10} className=\"mt-2\">\n                    {hasBeenFound ? <TranslationGroup cardLang={cardLang} cardObj={cardInfo} /> : null}\n                </Col>\n                <Col>\n                </Col>\n            </Row>\n            <SearchCardModal show={shouldShowModal} noWord={noWord} handleClose={handleClose} />\n        </Container>\n    )\n}\n\nexport default SearchCard;","export const fetchGetCard = (lang, word) => {\n    return fetch(\"/getCard\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ lang: lang, word: word })\n    }).then(response => response.text());\n};"],"sourceRoot":""}