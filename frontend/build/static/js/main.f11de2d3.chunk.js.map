{"version":3,"sources":["components/norwegian/AdjGrammarNorwegian.jsx","components/norwegian/NounGrammarNorwegian.jsx","components/norwegian/VerbGrammarNorwegian.jsx","components/norwegian/NorwegianCard.jsx","components/Header.jsx","components/SearchCard.jsx","Routes.jsx","App.js","reportWebVitals.js","index.js"],"names":["AdjGrammarNorwegian","grammarObj","Table","bordered","hover","size","colSpan","masculineSinIndef","masculineSinDef","masculinePlIndef","masculinePlDef","feminineSinIndef","feminineSinDef","femininePlIndef","femininePlDef","neuterSinIndef","neuterSinDef","neuterPlIndef","neuterPlDef","comparative","indefSuperlative","defSuperlative","NounGrammarNorwegian","singularIndefinite","singularDefinite","pluralIndefinite","pluralDefinite","VerbGrammarNorwegian","present","past","future","conditional","presentPerfect","pastPerfect","futurePerfect","conditionalPerfect","NorwegianCard","props","cardObj","singleTranslation","translation","useState","window","innerWidth","windowWidth","setWindowWidth","useEffect","addEventListener","result","grammarAdj","grammarNoun","grammarVerb","gender","Card","Body","Title","word","Subtitle","className","pronounciation","type","Text","meaning","Header","Navbar","sticky","bg","variant","expand","Brand","as","Link","to","Toggle","Collapse","id","Nav","Form","inline","FormControl","placeholder","Button","SearchCard","validated","setValidated","hasBeenFound","cardInfo","Container","fluid","Row","Col","xs","noValidate","onSubmit","event","preventDefault","stopPropagation","currentTarget","checkValidity","wordInput","document","getElementById","fetch","method","headers","body","JSON","stringify","value","then","response","text","data","console","log","catch","error","Label","htmlFor","srOnly","InputGroup","Prepend","required","Feedback","style","order","App","testCard","require","secondCard","thirdCard","exact","path","noGutters","CardDeck","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f11de2d3.chunk.js","sourcesContent":["import Table from 'react-bootstrap/Table';\n\nfunction AdjGrammarNorwegian({ grammarObj }) {\n\n    return (\n        <>\n            <Table bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th colSpan=\"2\">Singular</th>\n                        <th colSpan=\"2\">Plural</th>\n                    </tr>\n                    <tr>\n                        <th></th>\n                        <th>Indefinite</th>\n                        <th>Definite</th>\n                        <th>Indefinite</th>\n                        <th>Definite</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td><strong>masc.</strong></td>\n                        <td>{grammarObj.masculineSinIndef}</td>\n                        <td>{grammarObj.masculineSinDef}</td>\n                        <td>{grammarObj.masculinePlIndef}</td>\n                        <td>{grammarObj.masculinePlDef}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>fem.</strong></td>\n                        <td>{grammarObj.feminineSinIndef}</td>\n                        <td>{grammarObj.feminineSinDef}</td>\n                        <td>{grammarObj.femininePlIndef}</td>\n                        <td>{grammarObj.femininePlDef}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>neut.</strong></td>\n                        <td>{grammarObj.neuterSinIndef}</td>\n                        <td>{grammarObj.neuterSinDef}</td>\n                        <td>{grammarObj.neuterPlIndef}</td>\n                        <td>{grammarObj.neuterPlDef}</td>\n                    </tr>\n                </tbody>\n            </Table>\n            <Table bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>Comparative</th>\n                        <th>Indefinite superlative</th>\n                        <th>Definite superlative</th>\n                    </tr>\n                    <tr>\n                        <td>{grammarObj.comparative}</td>\n                        <td>{grammarObj.indefSuperlative}</td>\n                        <td>{grammarObj.defSuperlative}</td>\n                    </tr>\n                </thead>\n            </Table>\n        </>\n    )\n}\n\nexport default AdjGrammarNorwegian;","import Table from 'react-bootstrap/Table';\n\nfunction NounGrammarNorwegian({ grammarObj }) {\n\n    return (\n        <Table bordered hover size=\"sm\">\n            <thead>\n                <tr>\n                    <th></th>\n                    <th>Singular</th>\n                    <th>Plural</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td><strong>Indefinite</strong></td>\n                    <td>{grammarObj.singularIndefinite}</td>\n                    <td>{grammarObj.singularDefinite}</td>\n                </tr>\n                <tr>\n                    <td><strong>Definite</strong></td>\n                    <td>{grammarObj.pluralIndefinite}</td>\n                    <td>{grammarObj.pluralDefinite}</td>\n                </tr>\n            </tbody>\n        </Table>\n    )\n}\n\nexport default NounGrammarNorwegian;","import Table from 'react-bootstrap/Table';\n\nfunction VerbGrammarNorwegian({ grammarObj }) {\n\n    return (\n        <Table bordered hover size=\"sm\">\n            <thead>\n                <tr>\n                    <th></th>\n                    <th>Present</th>\n                    <th>Past</th>\n                    <th>Future</th>\n                    <th>Conditional</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td><strong>Simple</strong></td>\n                    <td>{grammarObj.present}</td>\n                    <td>{grammarObj.past}</td>\n                    <td>{grammarObj.future}</td>\n                    <td>{grammarObj.conditional}</td>\n                </tr>\n                <tr>\n                    <td><strong>Perfect</strong></td>\n                    <td>{grammarObj.presentPerfect}</td>\n                    <td>{grammarObj.pastPerfect}</td>\n                    <td>{grammarObj.futurePerfect}</td>\n                    <td>{grammarObj.conditionalPerfect}</td>\n                </tr>\n            </tbody>\n        </Table>\n    )\n}\n\nexport default VerbGrammarNorwegian;","import { useState, useEffect } from 'react';\n\nimport Card from 'react-bootstrap/Card';\nimport AdjGrammarNorwegian from './AdjGrammarNorwegian';\nimport NounGrammarNorwegian from './NounGrammarNorwegian';\nimport VerbGrammarNorwegian from './VerbGrammarNorwegian';\n\nimport '../../styles/Card.css';\n\nfunction NorwegianCard(props) {\n    let cardObj = props.cardObj;\n    let singleTranslation = cardObj.translation[0];\n\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowWidth(window.innerWidth);\n        }\n\n        window.addEventListener('resize', handleResize);\n    });\n\n    let result = null;\n\n    if (windowWidth >= 576) {\n        if (\"grammarAdj\" in singleTranslation) {\n            result = <AdjGrammarNorwegian grammarObj={singleTranslation.grammarAdj} />\n        } else if (\"grammarNoun\" in singleTranslation) {\n            result = <NounGrammarNorwegian grammarObj={singleTranslation.grammarNoun} />\n        } else if (\"grammarVerb\" in singleTranslation) {\n            result = <VerbGrammarNorwegian grammarObj={singleTranslation.grammarVerb} />\n        }\n    } else {\n        // TODO: make Grammars arranged in an order that will handle smaller devices\n        if (\"grammarAdj\" in singleTranslation) {\n            result = null;//<AdjGrammarNorwegian grammarObj={singleTranslation.grammarAdj} />\n        } else if (\"grammarNoun\" in singleTranslation) {\n            result = null;//<NounGrammarNorwegian grammarObj={singleTranslation.grammarNoun} />\n        } else if (\"grammarVerb\" in singleTranslation) {\n            result = null;//<VerbGrammarNorwegian grammarObj={singleTranslation.grammarVerb} />\n        }\n    }\n\n    let gender = \"grammarNoun\" in singleTranslation ? singleTranslation.grammarNoun.gender : null;\n\n    return (\n        <Card>\n            <Card.Body>\n                <Card.Title>{cardObj.word}</Card.Title>\n                <Card.Subtitle className=\"mb-2\">{cardObj.pronounciation}</Card.Subtitle>\n                <Card.Subtitle className=\"mb-2 text-muted\">{singleTranslation.type} {gender}</Card.Subtitle>\n                <Card.Text>\n                    {singleTranslation.meaning}\n                </Card.Text>\n                {result}\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default NorwegianCard;","import Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\n\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Navbar.Brand as={Link} to=\"/\">LangLearn</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link as={Link} to=\"/addCard\">Add Card</Nav.Link>\n                    <Nav.Link as={Link} to=\"/searchCard\">Lookup word</Nav.Link>\n                </Nav>\n                <Form inline>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    <Button variant=\"outline-success\">Search</Button>\n                </Form>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default Header;","import InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { useState } from 'react';\n\nfunction SearchCard() {\n\n    const [validated, setValidated] = useState(false);\n\n    let hasBeenFound = false;\n    let cardInfo = null;\n\n    const searchCard = (event) => {\n\n        event.preventDefault();\n        event.stopPropagation();\n        \n        if (event.currentTarget.checkValidity() === true) {\n            setValidated(false);\n            const wordInput = document.getElementById(\"wordInput\");\n            fetch(\"/getNorwegianCard\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({word: wordInput.value})\n            }).then(response => response.text())\n            .then(data => {\n                if (data === \"WORD_NOT_FOUND\") {\n                    console.log(\"Oops, no word there!\");\n                } else if (data === \"MISSING_WORD\") {\n                    console.log(\"Somehow your word wasn't passed to the backend\");\n                } else {\n                    hasBeenFound = true;\n                    cardInfo = data;\n                }\n            }).catch((error) => {\n                console.error('Error:', error);\n            })\n        } else {\n            setValidated(true);\n        }\n    }\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col>\n                </Col>\n                <Col xs={10}>\n                    <Form className=\"mt-2\" noValidate validated={validated} onSubmit={searchCard}>\n                            <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\n                                Word\n                            </Form.Label>\n                            <InputGroup>\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text>Search:</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl required id=\"wordInput\" placeholder=\"Word\" />\n                                <FormControl.Feedback style={{order: 4}} type=\"invalid\">Empty box!</FormControl.Feedback>\n                                <Button type=\"submit\" variant=\"success\">\n                                    Submit\n                                </Button>\n                            </InputGroup>\n                    </Form>\n                </Col>\n                <Col>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                </Col>\n                <Col>\n                    { hasBeenFound ? <div>Found it! {cardInfo} </div> : null }\n                </Col>\n                <Col>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default SearchCard;","import './Routes.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CardDeck from 'react-bootstrap/CardDeck';\n\nimport NorwegianCard from './components/norwegian/NorwegianCard.jsx';\nimport Header from './components/Header.jsx';\nimport SearchCard from './components/SearchCard';\n\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n\n  let testCard = require('./cards/norwegian/test_card.json');\n  let secondCard = require('./cards/norwegian/test_card2.json');\n  let thirdCard = require('./cards/norwegian/test_card3.json');\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Container fluid className=\"no-padding-container h-100\">\n            <Row noGutters={true} className=\"content\">\n              <Col>\n              </Col>\n              <Col xs=\"10\">\n                <CardDeck className=\"deck\">\n                  <NorwegianCard cardObj={testCard} />\n                  <NorwegianCard cardObj={secondCard} />\n                  <NorwegianCard cardObj={thirdCard} />\n                </CardDeck>\n              </Col>\n              <Col>\n              </Col>\n            </Row>\n          </Container>\n        </Route>\n        <Route path=\"/addCard\">\n          <div>test add card</div>\n        </Route>\n        <Route path=\"/searchCard\">\n          <SearchCard />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Routes from './Routes.jsx';\n\nfunction App() {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Routes />\n        </Router>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}