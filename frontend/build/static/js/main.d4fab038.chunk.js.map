{"version":3,"sources":["components/Header.jsx","components/norwegian/AdjGrammarNorwegian.jsx","components/norwegian/NounGrammarNorwegian.jsx","components/norwegian/VerbGrammarNorwegian.jsx","components/norwegian/NorwegianCard.jsx","components/dutch/DutchCard.jsx","components/Flashcard.jsx","components/SearchCard.jsx","utils/fetchGetCard.js","components/AddCard.jsx","Routes.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","sticky","bg","variant","expand","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","Form","inline","FormControl","type","placeholder","Button","AdjGrammarNorwegian","grammarObj","origKeys","Object","keys","sort","testKeys","JSON","stringify","checkProperties","TypeError","Table","bordered","hover","size","colSpan","masculineSinIndef","masculineSinDef","masculinePlIndef","masculinePlDef","feminineSinIndef","feminineSinDef","femininePlIndef","femininePlDef","neuterSinIndef","neuterSinDef","neuterPlIndef","neuterPlDef","comparative","indefSuperlative","defSuperlative","NounGrammarNorwegian","singularIndefinite","singularDefinite","pluralIndefinite","pluralDefinite","VerbGrammarNorwegian","present","past","future","conditional","presentPerfect","pastPerfect","futurePerfect","conditionalPerfect","NorwegianCard","cardObj","numOfTranslation","singleTranslation","translation","result","trObj","useState","window","innerWidth","windowWidth","setWindowWidth","useEffect","addEventListener","grammarAdj","grammarNoun","grammarVerb","gender","Card","Body","Title","word","Subtitle","pronounciation","Text","meaning","DutchCard","Flashcard","cardLang","SearchCard","validated","setValidated","hasBeenFound","setFound","cardInfo","setCardInfo","setCardLang","noWord","setNoWord","show","setShow","wordInput","useRef","selectInput","handleClose","Container","fluid","Row","Col","xs","noValidate","onSubmit","event","lang","preventDefault","stopPropagation","currentTarget","checkValidity","current","value","fetch","method","headers","body","then","response","text","data","missingWord","console","log","parse","catch","error","Label","htmlFor","srOnly","InputGroup","Prepend","Control","ref","defaultValue","required","Feedback","style","order","Modal","onHide","closeButton","Footer","onClick","AddCard","App","exact","path","noGutters","CardDeck","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4fab038.chunk.js","sourcesContent":["import Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <Navbar.Brand as={Link} to=\"/\">LangLearn</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link as={Link} to=\"/addCard\">Add Card</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/searchCard\">Lookup word</Nav.Link>\r\n                </Nav>\r\n                <Form inline>\r\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                    <Button variant=\"outline-success\">Search</Button>\r\n                </Form>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header;","import Table from 'react-bootstrap/Table';\r\n\r\nfunction checkProperties(grammarObj) {\r\n    const testObj = {\r\n        \"masculineSinIndef\": \"ikke\",\r\n        \"masculineSinDef\": \"ikka\",\r\n        \"masculinePlIndef\": \"ikke\",\r\n        \"masculinePlDef\": \"ikka\",\r\n        \"feminineSinIndef\": \"ikke\",\r\n        \"feminineSinDef\": \"ikka\",\r\n        \"femininePlIndef\": \"ikke\",\r\n        \"femininePlDef\": \"ikka\",\r\n        \"neuterSinIndef\": \"eikke\",\r\n        \"neuterSinDef\": \"eikka\",\r\n        \"neuterPlIndef\": \"ikket\",\r\n        \"neuterPlDef\": \"ikkete\",\r\n        \"comparative\": \"ikketa\",\r\n        \"indefSuperlative\": \"ikketan\",\r\n        \"defSuperlative\": \"ikketane\",\r\n        \"_id\": \"420\"\r\n    }\r\n    let origKeys = Object.keys(grammarObj).sort();\r\n    let testKeys = Object.keys(testObj).sort();\r\n    return JSON.stringify(origKeys) === JSON.stringify(testKeys);\r\n}\r\n\r\nfunction AdjGrammarNorwegian({ grammarObj }) {\r\n\r\n    if (!checkProperties(grammarObj)) {\r\n        throw new TypeError(\"Wrong grammar obj structure in AdjGrammarNorwegian\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Table bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th colSpan=\"2\">Singular</th>\r\n                        <th colSpan=\"2\">Plural</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Indefinite</th>\r\n                        <th>Definite</th>\r\n                        <th>Indefinite</th>\r\n                        <th>Definite</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td><strong>masc.</strong></td>\r\n                        <td>{grammarObj.masculineSinIndef}</td>\r\n                        <td>{grammarObj.masculineSinDef}</td>\r\n                        <td>{grammarObj.masculinePlIndef}</td>\r\n                        <td>{grammarObj.masculinePlDef}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><strong>fem.</strong></td>\r\n                        <td>{grammarObj.feminineSinIndef}</td>\r\n                        <td>{grammarObj.feminineSinDef}</td>\r\n                        <td>{grammarObj.femininePlIndef}</td>\r\n                        <td>{grammarObj.femininePlDef}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><strong>neut.</strong></td>\r\n                        <td>{grammarObj.neuterSinIndef}</td>\r\n                        <td>{grammarObj.neuterSinDef}</td>\r\n                        <td>{grammarObj.neuterPlIndef}</td>\r\n                        <td>{grammarObj.neuterPlDef}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n            <Table bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Comparative</th>\r\n                        <th>Indefinite superlative</th>\r\n                        <th>Definite superlative</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{grammarObj.comparative}</td>\r\n                        <td>{grammarObj.indefSuperlative}</td>\r\n                        <td>{grammarObj.defSuperlative}</td>\r\n                    </tr>\r\n                </thead>\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdjGrammarNorwegian;","import Table from 'react-bootstrap/Table';\r\n\r\nfunction checkProperties(grammarObj) {\r\n    const testObj = {\r\n        \"countable\": \"true\",\r\n        \"gender\": \"masculine\",\r\n        \"singularIndefinite\": \"en hund\",\r\n        \"singularDefinite\": \"hunden\",\r\n        \"pluralIndefinite\": \"hunder\",\r\n        \"pluralDefinite\": \"hundene\",\r\n        \"_id\": \"420\"\r\n    }\r\n    let origKeys = Object.keys(grammarObj).sort();\r\n    let testKeys = Object.keys(testObj).sort();\r\n    return JSON.stringify(origKeys) === JSON.stringify(testKeys);\r\n}\r\n\r\nfunction NounGrammarNorwegian({ grammarObj }) {\r\n\r\n    if (!checkProperties(grammarObj)) {\r\n        throw new TypeError(\"Wrong grammar obj structure in NounGrammarNorwegian\");\r\n    }\r\n\r\n    return (\r\n        <Table bordered hover size=\"sm\">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>Singular</th>\r\n                    <th>Plural</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td><strong>Indefinite</strong></td>\r\n                    <td>{grammarObj.singularIndefinite}</td>\r\n                    <td>{grammarObj.singularDefinite}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td><strong>Definite</strong></td>\r\n                    <td>{grammarObj.pluralIndefinite}</td>\r\n                    <td>{grammarObj.pluralDefinite}</td>\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default NounGrammarNorwegian;","import Table from 'react-bootstrap/Table';\r\n\r\nfunction checkProperties(grammarObj) {\r\n    const testObj = {\r\n        \"infinitive\": \"faef\",\r\n        \"present\": \"aefaf\",\r\n        \"past\": \"efffe\",\r\n        \"future\": \"eea\",\r\n        \"conditional\": \"fafa\",\r\n        \"imperative\": \"fafaef\",\r\n        \"presentPerfect\": \"va faaan\",\r\n        \"pastPerfect\": \"fafeee\",\r\n        \"futurePerfect\": \"fafaa\",\r\n        \"conditionalPerfect\": \"fff\",\r\n        \"_id\": \"420\"\r\n    }\r\n    let origKeys = Object.keys(grammarObj).sort();\r\n    let testKeys = Object.keys(testObj).sort();\r\n    return JSON.stringify(origKeys) === JSON.stringify(testKeys);\r\n}\r\n\r\n\r\nfunction VerbGrammarNorwegian({ grammarObj }) {\r\n\r\n    if (!checkProperties(grammarObj)) {\r\n        throw new TypeError(\"Wrong grammar obj structure in VerbGrammarNorwegian\");\r\n    }\r\n\r\n    return (\r\n        <Table bordered hover size=\"sm\">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>Present</th>\r\n                    <th>Past</th>\r\n                    <th>Future</th>\r\n                    <th>Conditional</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td><strong>Simple</strong></td>\r\n                    <td>{grammarObj.present}</td>\r\n                    <td>{grammarObj.past}</td>\r\n                    <td>{grammarObj.future}</td>\r\n                    <td>{grammarObj.conditional}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td><strong>Perfect</strong></td>\r\n                    <td>{grammarObj.presentPerfect}</td>\r\n                    <td>{grammarObj.pastPerfect}</td>\r\n                    <td>{grammarObj.futurePerfect}</td>\r\n                    <td>{grammarObj.conditionalPerfect}</td>\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default VerbGrammarNorwegian;","import { useState, useEffect } from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport AdjGrammarNorwegian from './AdjGrammarNorwegian';\r\nimport NounGrammarNorwegian from './NounGrammarNorwegian';\r\nimport VerbGrammarNorwegian from './VerbGrammarNorwegian';\r\n\r\nimport '../../styles/Card.css';\r\n\r\nfunction checkProperties(cardObj, numOfTranslation) {\r\n    let result = false;\r\n    if ('word' in cardObj && 'pronounciation' in cardObj && 'translation' in cardObj) {\r\n        let trObj = cardObj.translation[numOfTranslation];\r\n        if ('grammarAdj' in trObj || 'grammarNoun' in trObj || 'grammarVerb' in trObj) {\r\n            result = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction NorwegianCard({ cardObj, numOfTranslation }) {\r\n    let singleTranslation = cardObj.translation[numOfTranslation];\r\n\r\n    if (!checkProperties(cardObj, numOfTranslation)) {\r\n        throw new TypeError(\"Wrong card obj structure in NorwegianCard\");\r\n    }\r\n\r\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowWidth(window.innerWidth);\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n    });\r\n\r\n    let result = null;\r\n\r\n    if (windowWidth >= 576) {\r\n        if (\"grammarAdj\" in singleTranslation) {\r\n            result = <AdjGrammarNorwegian grammarObj={singleTranslation.grammarAdj} />\r\n        } else if (\"grammarNoun\" in singleTranslation) {\r\n            result = <NounGrammarNorwegian grammarObj={singleTranslation.grammarNoun} />\r\n        } else {\r\n            result = <VerbGrammarNorwegian grammarObj={singleTranslation.grammarVerb} />\r\n        }\r\n    } else {\r\n        // TODO: make Grammars arranged in an order that will handle smaller devices\r\n        if (\"grammarAdj\" in singleTranslation) {\r\n            result = <div data-testid=\"testCard\"></div>; //<AdjGrammarNorwegian grammarObj={singleTranslation.grammarAdj} />\r\n        } else if (\"grammarNoun\" in singleTranslation) {\r\n            result = <div data-testid=\"testCard\"></div>; //<NounGrammarNorwegian grammarObj={singleTranslation.grammarNoun} />\r\n        } else {\r\n            result = <div data-testid=\"testCard\"></div>; //<VerbGrammarNorwegian grammarObj={singleTranslation.grammarVerb} />\r\n        }\r\n    }\r\n\r\n    let gender = \"grammarNoun\" in singleTranslation ? singleTranslation.grammarNoun.gender : null;\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>{cardObj.word}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2\">{cardObj.pronounciation}</Card.Subtitle>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">{singleTranslation.type} {gender}</Card.Subtitle>\r\n                <Card.Text>\r\n                    {singleTranslation.meaning}\r\n                </Card.Text>\r\n                {result}\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NorwegianCard;","function DutchCard() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DutchCard;","import NorwegianCard from \"./norwegian/NorwegianCard\";\r\nimport DutchCard from \"./dutch/DutchCard\";\r\n\r\nfunction Flashcard({ cardLang, cardObj }) {\r\n\r\n    let result = null;\r\n\r\n    switch (cardLang) {\r\n        case \"Dutch\": result = <DutchCard cardObj={cardObj} />; break;\r\n        case \"Norwegian\": result = <NorwegianCard cardObj={cardObj} numOfTranslation={0} />; break;\r\n        default: result = null;\r\n    }\r\n\r\n    return (\r\n        result\r\n    );\r\n}\r\n\r\nexport default Flashcard;","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport { useState, useRef } from 'react';\r\n\r\nimport '../styles/SearchCard.css';\r\nimport Flashcard from './Flashcard';\r\nimport { fetchGetCard } from '../utils/fetchGetCard.js';\r\n\r\nfunction SearchCard() {\r\n\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const [hasBeenFound, setFound] = useState(false);\r\n    const [cardInfo, setCardInfo] = useState(null);\r\n    const [cardLang, setCardLang] = useState(null);\r\n\r\n    const [noWord, setNoWord] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const wordInput = useRef(null);\r\n    const selectInput = useRef(null);\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const showModal = (missingWord) => {\r\n        setNoWord(missingWord);\r\n        setShow(true);\r\n        return;\r\n    }\r\n\r\n    const searchCard = (event) => {\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        if (event.currentTarget.checkValidity() === true) {\r\n            setValidated(false);\r\n            fetchGetCard(selectInput.current.value, wordInput.current.value)\r\n                .then(data => {\r\n                    if (data === \"DB_ERR\") {\r\n                        console.log(\"Oops, something went wrong!\");\r\n                    } else if (data === \"MISSING_WORD_PASSED\") {\r\n                        console.log(\"Somehow your word wasn't passed to the backend\");\r\n                    } else {\r\n                        if (data === '') {\r\n                            showModal(wordInput.current.value);\r\n                        } else {\r\n                            // console.log(JSON.parse(data));\r\n                            setCardInfo(JSON.parse(data));\r\n                            setCardLang(selectInput.current.value);\r\n                            setFound(true);\r\n                        }\r\n                    }\r\n                }).catch((error) => {\r\n                    console.error('Error:', error);\r\n                })\r\n        } else {\r\n            setValidated(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                </Col>\r\n                <Col xs={10}>\r\n                    <Form className=\"mt-2\" noValidate validated={validated} onSubmit={searchCard}>\r\n                        <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\r\n                            Word\r\n                        </Form.Label>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Language:</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control className=\"langDropdown\" ref={selectInput} as=\"select\" defaultValue=\"Norwegian\">\r\n                                <option>Dutch</option>\r\n                                <option>Norwegian</option>\r\n                            </Form.Control>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Search:</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl required ref={wordInput} placeholder=\"Word\" data-testid=\"testWordInput\" />\r\n                            <FormControl.Feedback style={{ order: 4 }} type=\"invalid\">Empty box!</FormControl.Feedback>\r\n                            <Button data-testid=\"testButtonSearch\" type=\"submit\" variant=\"success\">\r\n                                Submit\r\n                            </Button>\r\n                        </InputGroup>\r\n                    </Form>\r\n                </Col>\r\n                <Col>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                </Col>\r\n                <Col xs={10} className=\"mt-2\">\r\n                    {hasBeenFound ? <Flashcard cardLang={cardLang} cardObj={cardInfo} /> : null}\r\n                </Col>\r\n                <Col>\r\n                </Col>\r\n            </Row>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Not in dictionary</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>We couldn't find the word {noWord} in the dictionary</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleClose} data-testid=\"testCloseModal\">\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SearchCard;","export const fetchGetCard = (lang, word) => {\r\n    return fetch(\"/getCard\", {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ lang: lang, word: word })\r\n    }).then(response => response.text())\r\n}","import Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction AddCard() {\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                </Col>\r\n                <Col xs={10}>\r\n                    <div>Test stuff</div>\r\n                </Col>\r\n                <Col>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AddCard;","import './Routes.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CardDeck from 'react-bootstrap/CardDeck';\n\nimport Header from './components/Header.jsx';\nimport SearchCard from './components/SearchCard.jsx';\nimport AddCard from './components/AddCard.jsx';\n\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Container fluid className=\"no-padding-container h-100\">\n            <Row noGutters={true} className=\"content\">\n              <Col>\n              </Col>\n              <Col xs=\"10\">\n                <CardDeck className=\"deck\">\n                  <h1>Hi there!</h1>\n                </CardDeck>\n              </Col>\n              <Col>\n              </Col>\n            </Row>\n          </Container>\n        </Route>\n        <Route path=\"/addCard\">\n          <AddCard />\n        </Route>\n        <Route path=\"/searchCard\">\n          <SearchCard />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Routes from './Routes.jsx';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Routes />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}