{"version":3,"sources":["components/Header.jsx","components/norwegian/AdjGrammarNorwegian.jsx","components/norwegian/NounGrammarNorwegian.jsx","components/norwegian/VerbGrammarNorwegian.jsx","components/norwegian/NorwegianCard.jsx","components/SearchCard.jsx","Routes.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","sticky","bg","variant","expand","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","Form","inline","FormControl","type","placeholder","Button","AdjGrammarNorwegian","grammarObj","Table","bordered","hover","size","colSpan","masculineSinIndef","masculineSinDef","masculinePlIndef","masculinePlDef","feminineSinIndef","feminineSinDef","femininePlIndef","femininePlDef","neuterSinIndef","neuterSinDef","neuterPlIndef","neuterPlDef","comparative","indefSuperlative","defSuperlative","NounGrammarNorwegian","singularIndefinite","singularDefinite","pluralIndefinite","pluralDefinite","VerbGrammarNorwegian","present","past","future","conditional","presentPerfect","pastPerfect","futurePerfect","conditionalPerfect","NorwegianCard","props","cardObj","singleTranslation","translation","useState","window","innerWidth","windowWidth","setWindowWidth","useEffect","addEventListener","result","grammarAdj","grammarNoun","grammarVerb","gender","Card","Body","Title","word","Subtitle","pronounciation","Text","meaning","SearchCard","validated","setValidated","hasBeenFound","setFound","cardInfo","setCardInfo","noWord","setNoWord","show","setShow","handleClose","Container","fluid","Row","Col","xs","noValidate","onSubmit","event","preventDefault","stopPropagation","currentTarget","checkValidity","wordInput","document","getElementById","fetch","method","headers","body","JSON","stringify","value","then","response","text","data","missingWord","console","log","parse","catch","error","Label","htmlFor","srOnly","InputGroup","Prepend","required","Feedback","style","order","Modal","onHide","closeButton","Footer","onClick","App","exact","path","noGutters","CardDeck","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.499da475.chunk.js","sourcesContent":["import Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <Navbar.Brand as={Link} to=\"/\">LangLearn</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link as={Link} to=\"/addCard\">Add Card</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/searchCard\">Lookup word</Nav.Link>\r\n                </Nav>\r\n                <Form inline>\r\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                    <Button variant=\"outline-success\">Search</Button>\r\n                </Form>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header;","import Table from 'react-bootstrap/Table';\r\n\r\nfunction AdjGrammarNorwegian({ grammarObj }) {\r\n\r\n    return (\r\n        <>\r\n            <Table bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th colSpan=\"2\">Singular</th>\r\n                        <th colSpan=\"2\">Plural</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Indefinite</th>\r\n                        <th>Definite</th>\r\n                        <th>Indefinite</th>\r\n                        <th>Definite</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td><strong>masc.</strong></td>\r\n                        <td>{grammarObj.masculineSinIndef}</td>\r\n                        <td>{grammarObj.masculineSinDef}</td>\r\n                        <td>{grammarObj.masculinePlIndef}</td>\r\n                        <td>{grammarObj.masculinePlDef}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><strong>fem.</strong></td>\r\n                        <td>{grammarObj.feminineSinIndef}</td>\r\n                        <td>{grammarObj.feminineSinDef}</td>\r\n                        <td>{grammarObj.femininePlIndef}</td>\r\n                        <td>{grammarObj.femininePlDef}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><strong>neut.</strong></td>\r\n                        <td>{grammarObj.neuterSinIndef}</td>\r\n                        <td>{grammarObj.neuterSinDef}</td>\r\n                        <td>{grammarObj.neuterPlIndef}</td>\r\n                        <td>{grammarObj.neuterPlDef}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n            <Table bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Comparative</th>\r\n                        <th>Indefinite superlative</th>\r\n                        <th>Definite superlative</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{grammarObj.comparative}</td>\r\n                        <td>{grammarObj.indefSuperlative}</td>\r\n                        <td>{grammarObj.defSuperlative}</td>\r\n                    </tr>\r\n                </thead>\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdjGrammarNorwegian;","import Table from 'react-bootstrap/Table';\r\n\r\nfunction NounGrammarNorwegian({ grammarObj }) {\r\n\r\n    return (\r\n        <Table bordered hover size=\"sm\">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>Singular</th>\r\n                    <th>Plural</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td><strong>Indefinite</strong></td>\r\n                    <td>{grammarObj.singularIndefinite}</td>\r\n                    <td>{grammarObj.singularDefinite}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td><strong>Definite</strong></td>\r\n                    <td>{grammarObj.pluralIndefinite}</td>\r\n                    <td>{grammarObj.pluralDefinite}</td>\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default NounGrammarNorwegian;","import Table from 'react-bootstrap/Table';\r\n\r\nfunction VerbGrammarNorwegian({ grammarObj }) {\r\n\r\n    return (\r\n        <Table bordered hover size=\"sm\">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>Present</th>\r\n                    <th>Past</th>\r\n                    <th>Future</th>\r\n                    <th>Conditional</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td><strong>Simple</strong></td>\r\n                    <td>{grammarObj.present}</td>\r\n                    <td>{grammarObj.past}</td>\r\n                    <td>{grammarObj.future}</td>\r\n                    <td>{grammarObj.conditional}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td><strong>Perfect</strong></td>\r\n                    <td>{grammarObj.presentPerfect}</td>\r\n                    <td>{grammarObj.pastPerfect}</td>\r\n                    <td>{grammarObj.futurePerfect}</td>\r\n                    <td>{grammarObj.conditionalPerfect}</td>\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default VerbGrammarNorwegian;","import { useState, useEffect } from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport AdjGrammarNorwegian from './AdjGrammarNorwegian';\r\nimport NounGrammarNorwegian from './NounGrammarNorwegian';\r\nimport VerbGrammarNorwegian from './VerbGrammarNorwegian';\r\n\r\nimport '../../styles/Card.css';\r\n\r\nfunction NorwegianCard(props) {\r\n    let cardObj = props.cardObj;\r\n    let singleTranslation = cardObj.translation[0];\r\n\r\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowWidth(window.innerWidth);\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n    });\r\n\r\n    let result = null;\r\n\r\n    if (windowWidth >= 576) {\r\n        if (\"grammarAdj\" in singleTranslation) {\r\n            result = <AdjGrammarNorwegian grammarObj={singleTranslation.grammarAdj} />\r\n        } else if (\"grammarNoun\" in singleTranslation) {\r\n            result = <NounGrammarNorwegian grammarObj={singleTranslation.grammarNoun} />\r\n        } else if (\"grammarVerb\" in singleTranslation) {\r\n            result = <VerbGrammarNorwegian grammarObj={singleTranslation.grammarVerb} />\r\n        }\r\n    } else {\r\n        // TODO: make Grammars arranged in an order that will handle smaller devices\r\n        if (\"grammarAdj\" in singleTranslation) {\r\n            result = null;//<AdjGrammarNorwegian grammarObj={singleTranslation.grammarAdj} />\r\n        } else if (\"grammarNoun\" in singleTranslation) {\r\n            result = null;//<NounGrammarNorwegian grammarObj={singleTranslation.grammarNoun} />\r\n        } else if (\"grammarVerb\" in singleTranslation) {\r\n            result = null;//<VerbGrammarNorwegian grammarObj={singleTranslation.grammarVerb} />\r\n        }\r\n    }\r\n\r\n    let gender = \"grammarNoun\" in singleTranslation ? singleTranslation.grammarNoun.gender : null;\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>{cardObj.word}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2\">{cardObj.pronounciation}</Card.Subtitle>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">{singleTranslation.type} {gender}</Card.Subtitle>\r\n                <Card.Text>\r\n                    {singleTranslation.meaning}\r\n                </Card.Text>\r\n                {result}\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NorwegianCard;","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport { useState } from 'react';\r\nimport NorwegianCard from './norwegian/NorwegianCard';\r\n\r\nfunction SearchCard() {\r\n\r\n    const [validated, setValidated] = useState(false);\r\n    const [hasBeenFound, setFound] = useState(false);\r\n    const [cardInfo, setCardInfo] = useState(null);\r\n\r\n    const [noWord, setNoWord] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const showModal = (missingWord) => {\r\n        setNoWord(missingWord);\r\n        setShow(true);\r\n        return;\r\n    }\r\n\r\n    const searchCard = (event) => {\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        if (event.currentTarget.checkValidity() === true) {\r\n            setValidated(false);\r\n            const wordInput = document.getElementById(\"wordInput\");\r\n            fetch(\"/getNorwegianCard\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ word: wordInput.value })\r\n            }).then(response => response.text())\r\n                .then(data => {\r\n                    if (data === \"ERR\") {\r\n                        console.log(\"Oops, something went wrong!\");\r\n                    } else if (data === \"MISSING_WORD\") {\r\n                        console.log(\"Somehow your word wasn't passed to the backend\");\r\n                    } else {\r\n                        if (data === '') {\r\n                            showModal(wordInput.value);\r\n                        } else {\r\n                            setCardInfo(JSON.parse(data));\r\n                            setFound(true);\r\n                        }\r\n                    }\r\n                }).catch((error) => {\r\n                    console.error('Error:', error);\r\n                })\r\n        } else {\r\n            setValidated(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                </Col>\r\n                <Col xs={10}>\r\n                    <Form className=\"mt-2\" noValidate validated={validated} onSubmit={searchCard}>\r\n                        <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\r\n                            Word\r\n                        </Form.Label>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>Search:</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl required id=\"wordInput\" placeholder=\"Word\" />\r\n                            <FormControl.Feedback style={{ order: 4 }} type=\"invalid\">Empty box!</FormControl.Feedback>\r\n                            <Button type=\"submit\" variant=\"success\">\r\n                                Submit\r\n                            </Button>\r\n                        </InputGroup>\r\n                    </Form>\r\n                </Col>\r\n                <Col>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                </Col>\r\n                <Col xs={10} className=\"mt-2\">\r\n                    {hasBeenFound ? <NorwegianCard cardObj={cardInfo} /> : null}\r\n                </Col>\r\n                <Col>\r\n                </Col>\r\n            </Row>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Not in dictionary</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>We couldn't find the word {noWord} in the dictionary</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SearchCard;","import './Routes.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CardDeck from 'react-bootstrap/CardDeck';\n\nimport Header from './components/Header.jsx';\nimport SearchCard from './components/SearchCard';\n\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Container fluid className=\"no-padding-container h-100\">\n            <Row noGutters={true} className=\"content\">\n              <Col>\n              </Col>\n              <Col xs=\"10\">\n                <CardDeck className=\"deck\">\n                  <h1>Hi there!</h1>\n                </CardDeck>\n              </Col>\n              <Col>\n              </Col>\n            </Row>\n          </Container>\n        </Route>\n        <Route path=\"/addCard\">\n          <div>test add card</div>\n        </Route>\n        <Route path=\"/searchCard\">\n          <SearchCard />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Routes from './Routes.jsx';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Routes />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}