{"version":3,"sources":["langJsons sync /^/.//.*/.json$","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Table.js","components/DeleteCardModal.jsx","utils/fetchCheckDeletePassword.js","utils/fetchDeleteCard.js","components/Flashcard.jsx","components/TranslationGroup.jsx","components/SearchCardModal.jsx","components/SearchCard.jsx","utils/fetchGetCard.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","_excluded","CardImg","React","forwardRef","_ref","ref","bsPrefix","className","variant","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","Table","striped","bordered","borderless","hover","size","responsive","decoratedBsPrefix","classes","table","responsiveClass","DeleteCardModal","cardLang","cardId","translationId","useState","isShown","setIsShown","validated","setValidated","passInput","useRef","handleClose","handleDelete","pass","password","current","passInpObj","document","getElementById","fetch","method","headers","JSON","stringify","then","response","res","setCustomValidity","lang","fetchDeleteCard","console","error","window","location","reload","catch","err","Button","onClick","Modal","show","onHide","closeButton","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","Group","Label","Control","type","placeholder","Feedback","createRow","index","row","cardObj","numOfTranslation","grammarType","cell","outside","inside","includes","propertyName","replaceAll","numberOfCols","match","length","colSpan","createCell","constructTables","displayObj","isSmallScreen","structure","wholeTable","createSingleTable","Flashcard","singleTranslation","translation","toUpperCase","slice","typeOfSpeech","require","getDisplayObj","innerWidth","windowWidth","setWindowWidth","setIsSmallScreen","useEffect","isMounted","addEventListener","result","_id","word","pronounciation","meaning","TranslationGroup","numOfTranslations","Array","fill","_","i","SearchCardModal","noWord","SearchCard","hasBeenFound","setFound","wordInput","langInput","cardInfo","setCardInfo","setCardLang","setNoWord","shouldShowModal","setShouldShowModal","numberOfColumns","Container","fluid","Row","Col","xs","currentTarget","checkValidity","data","missingWord","startsWith","parse","sm","md","InputGroup","Prepend","defaultValue","FormControl","required","style","order","block"],"mappings":"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","file":"static/js/5.cc91cabf.chunk.js","sourcesContent":["var map = {\n\t\"./Dutch.json\": 69,\n\t\"./Norwegian.json\": 70\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 67;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"variant\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nimport { useState, useRef } from 'react';\n\nimport { fetchCheckDeletePassword } from '../utils/fetchCheckDeletePassword.js';\nimport { fetchDeleteCard } from '../utils/fetchDeleteCard.js';\n\nfunction DeleteCardModal({ cardLang, cardId, translationId }) {\n\n    const [isShown, setIsShown] = useState(false);\n    const [validated, setValidated] = useState(false);\n    const passInput = useRef(null);\n\n    const handleClose = () => {\n        setIsShown(false);\n    }\n\n    const handleOpen = () => {\n        setIsShown(true);\n    }\n\n    const handleDelete = () => {\n\n        const password = passInput.current.value;\n        const passInpObj = document.getElementById(\"passInput\");\n\n        setValidated(false);\n\n        fetchCheckDeletePassword(password).then(res => {\n            if (res === \"Forbidden\") {\n                passInpObj.setCustomValidity(\"Wrong password\");\n            } else {\n                passInpObj.setCustomValidity(\"\");\n                fetchDeleteCard(password, cardLang, cardId, translationId).then(res => {\n                    if (res === \"MISSING_LANG_PASSED\" || res === \"Forbidden\") {\n                        console.error(res);\n                    } else {\n                        window.location.reload();\n                    }\n                }).catch(err => {\n                    console.error(\"Error: \", err);\n                });\n            }\n        }).then(() => {\n            setValidated(true);\n        }).catch(error => {\n            console.error(\"Error: \", error);\n        });\n    }\n\n    const formSubmit = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        handleDelete();\n    }\n\n    return (\n        <>\n            <Button variant=\"danger\" onClick={handleOpen} data-testid=\"testOpenModalButton\">\n                Delete\n            </Button>\n            <Modal show={isShown} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        Authorization required\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form noValidate validated={validated} id=\"passwordForm\" onSubmit={formSubmit} data-testid=\"testFormDeleteCard\">\n                        <Form.Group>\n                            <Form.Label>Please type in a password:</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" ref={passInput} id=\"passInput\" data-testid=\"testPassInput\"/>\n                            <Form.Control.Feedback type=\"invalid\">Wrong password</Form.Control.Feedback>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={handleDelete} data-testid=\"testSendPassButton\">\n                        Delete\n                    </Button>\n                    <Button variant=\"secondary\" onClick={handleClose} data-testid=\"testCloseModalButton\">\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default DeleteCardModal;","export const fetchCheckDeletePassword = (pass) => {\n    return fetch(\"/checkDeletePassword\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ password: pass })\n    }).then(response => response.text());\n};","export const fetchDeleteCard = (password, lang, id, translationId) => {\n    return fetch(\"/deleteCard\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ password: password, lang: lang, id: id, translationId: translationId })\n    }).then(response => response.text());\n};","import { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Table from 'react-bootstrap/Table';\n\nimport DeleteCardModal from './DeleteCardModal.jsx';\n\nimport '../styles/CardTable.css';\n\nconst typeOfSpeech = (cardObj) => {\n    let type = cardObj['translation'][0]['type'];\n    return type[0].toUpperCase() + type.slice(1);\n}\n\nconst getDisplayObj = (cardLang, grammarType) => {\n    let file = require(`../langJsons/${cardLang}.json`);\n    return file[`display${grammarType}`];\n}\n\nconst createCell = (index, cell, cardObj, numOfTranslation, grammarType) => {\n    let outside = null;\n    let inside = null;\n\n    if (cell === '') {\n        return <td key={index}></td>\n    }\n\n    if (cell.includes('$')) {\n        let propertyName = cell.replaceAll('$', '');\n        inside = cardObj['translation'][numOfTranslation][`grammar${grammarType}`][propertyName];\n    } else {\n        inside = cell.replaceAll('#', '').replaceAll('*', '');\n    }\n\n    if (cell.includes('#') && cell.includes('*')) {\n        let numberOfCols = cell.match(/\\*/g || []).length;\n        outside = <th className=\"cardTableHeader\" colSpan={numberOfCols} key={index}>{inside}</th>;\n    } else if (cell.includes('#')) {\n        outside = <th className=\"cardTableHeader\" key={index}>{inside}</th>;\n    } else if (cell.includes('*')) {\n        let numberOfCols = cell.match(/\\*/g || []).length;\n        outside = <td colSpan={numberOfCols} key={index}>{inside}</td>;\n    } else {\n        outside = <td key={index}>{inside}</td>;\n    }\n\n    return outside;\n}\n\nconst createRow = (index, row, cardObj, numOfTranslation, grammarType) => {\n    return (\n        <tr key={index}>\n            { row.map((cell, index) => createCell(index, cell, cardObj, numOfTranslation, grammarType)) }\n        </tr>\n    )\n}\n\nconst createSingleTable = (index, wholeTable, cardObj, numOfTranslation, grammarType) => {\n    return (\n        <Table bordered hover size=\"sm\" key={index}>\n            <tbody data-testid=\"testCard\">\n                { wholeTable.map((row, index) => createRow(index, row, cardObj, numOfTranslation, grammarType)) }\n            </tbody>\n        </Table>\n    );\n}\n\nconst constructTables = (cardObj, grammarType, displayObj, isSmallScreen, numOfTranslation) => {\n    const screenType = isSmallScreen ? 'small' : 'regular';\n    const structure = displayObj[screenType];\n    return (\n        <>\n            {structure.map((wholeTable, index) => createSingleTable(index, wholeTable, cardObj, numOfTranslation, grammarType))}\n        </>\n    );\n}\n\n// Do something with gender and countable stuff - Nouns\n// Do something with infinitives - Verbs\nfunction Flashcard({ cardLang, cardObj, numOfTranslation }) {\n\n    const singleTranslation = cardObj.translation[numOfTranslation];\n    const grammarType = typeOfSpeech(cardObj);\n    const displayObj = getDisplayObj(cardLang, grammarType);\n\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n    const [isSmallScreen, setIsSmallScreen] = useState(null);\n\n    useEffect(() => {\n        let isMounted = true;\n        function handleResize() {\n            if (isMounted) setWindowWidth(window.innerWidth);\n        }\n        window.addEventListener('resize', handleResize);\n        return () => { isMounted = false };\n    }, []);\n\n    useEffect(() => {\n        if (windowWidth <= 576) {\n            setIsSmallScreen(true);\n        } else {\n            setIsSmallScreen(false);\n        }\n    }, [windowWidth]);\n\n    const result = constructTables(cardObj, grammarType, displayObj, isSmallScreen, numOfTranslation);\n\n    return (\n        <Card className=\"mb-2\">\n            <Card.Header>\n                <DeleteCardModal cardLang=\"Norwegian\" cardId={cardObj._id} translationId={singleTranslation._id} />\n            </Card.Header>\n            <Card.Body>\n                <Card.Title>{cardObj.word}</Card.Title>\n                <Card.Subtitle className=\"mb-2\">{singleTranslation.pronounciation}</Card.Subtitle>\n                <Card.Subtitle className=\"mb-2 text-muted\">{singleTranslation.type}</Card.Subtitle>\n                <Card.Text>\n                    {singleTranslation.meaning}\n                </Card.Text>\n                {result}\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default Flashcard;","import Flashcard from \"./Flashcard.jsx\";\n\nfunction TranslationGroup({ cardLang, cardObj }) {\n    let numOfTranslations = cardObj.translation.length;\n    return (\n        <div>\n            {Array(numOfTranslations).fill().map((_, i) => <Flashcard key={i} cardLang={cardLang} cardObj={cardObj} numOfTranslation={i} />)}\n        </div>\n    )\n}\n\nexport default TranslationGroup;","import Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nfunction SearchCardModal({show, noWord, handleClose}) {\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Not in dictionary</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>We couldn't find the word {noWord} in the dictionary</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"primary\" onClick={handleClose} data-testid=\"testCloseModal\">\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default SearchCardModal;","import InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { useState, useRef, useEffect } from 'react';\n\nimport '../styles/SearchCard.css';\nimport TranslationGroup from './TranslationGroup.jsx';\nimport SearchCardModal from './SearchCardModal.jsx';\nimport { fetchGetCard } from '../utils/fetchGetCard.js';\n\nfunction SearchCard() {\n\n    const [validated, setValidated] = useState(false);\n    const [hasBeenFound, setFound] = useState(false);\n    const wordInput = useRef(null);\n    const langInput = useRef(null);\n\n    const [cardInfo, setCardInfo] = useState(null);\n    const [cardLang, setCardLang] = useState(null);\n\n    const [noWord, setNoWord] = useState(null);\n    const [shouldShowModal, setShouldShowModal] = useState(false);\n\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowWidth(window.innerWidth);\n        }\n\n        window.addEventListener('resize', handleResize);\n    });\n\n    let numberOfColumns = windowWidth <= 425 ? 12 : 10;\n\n    const handleClose = () => setShouldShowModal(false);\n\n    const showModal = (missingWord) => {\n        setNoWord(missingWord);\n        setShouldShowModal(true);\n        return;\n    }\n\n    const searchCard = (event) => {\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.currentTarget.checkValidity() === true) {\n            setValidated(false);\n            fetchGetCard(langInput.current.value, wordInput.current.value)\n                .then(data => {\n                    if (data === \"DB_ERR\" || data === \"MISSING_WORD_PASSED\" || data === \"MISSING_LANG_PASSED\") {\n                        console.error(data);\n                    } else {\n                        if (data === '') {\n                            showModal(wordInput.current.value);\n                        } else if (data.startsWith(\"Proxy error:\")) {\n                            console.error(data);\n                        } else {\n                            setCardInfo(JSON.parse(data));\n                            setCardLang(langInput.current.value);\n                            setFound(true);\n                        }\n                    }\n                }).catch((error) => {\n                    console.error('Error:', error);\n                })\n        } else {\n            setValidated(true);\n        }\n    }\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col>\n                </Col>\n                <Col xs={numberOfColumns} data-testid=\"testFormCol\">\n                    <Form className=\"mt-2\" noValidate validated={validated} onSubmit={searchCard}>\n                        <Form.Row className=\"align-items-center gapBetweenRows\">\n                            <Col xs={12} sm={6} md={5}>\n                                <InputGroup>\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text>Language:</InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control className=\"langDropdown\" ref={langInput} as=\"select\" defaultValue=\"Norwegian\">\n                                        <option>Dutch</option>\n                                        <option>Norwegian</option>\n                                    </Form.Control>\n                                </InputGroup>\n                            </Col>\n                            <Col xs={12} sm={6} md={5}>\n                                <InputGroup>\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text>Word:</InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <FormControl required ref={wordInput} placeholder=\"Word\" data-testid=\"testWordInput\" />\n                                    <FormControl.Feedback style={{ order: 4 }} type=\"invalid\">Empty box!</FormControl.Feedback>\n                                </InputGroup>\n                            </Col>\n                            <Col xs={12} md={2}>\n                                <Button data-testid=\"testButtonSearch\" type=\"submit\" variant=\"success\" block>\n                                    Submit\n                                </Button>\n                            </Col>\n                        </Form.Row>\n                    </Form>\n                </Col>\n                <Col>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                </Col>\n                <Col xs={numberOfColumns} className=\"mt-2\">\n                    {hasBeenFound ? <TranslationGroup cardLang={cardLang} cardObj={cardInfo} /> : null}\n                </Col>\n                <Col>\n                </Col>\n            </Row>\n            <SearchCardModal show={shouldShowModal} noWord={noWord} handleClose={handleClose} />\n        </Container>\n    )\n}\n\nexport default SearchCard;","export const fetchGetCard = (lang, word) => {\n    return fetch(\"/getCard\", {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ lang: lang, word: word })\n    }).then(response => response.text());\n};"],"sourceRoot":""}